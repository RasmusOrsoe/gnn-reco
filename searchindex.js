Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.dataset.sqlite.sqlite_dataset_perturbed", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.i3particleextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3quesoextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset_perturbed.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.i3particleextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3quesoextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "sqlite_dataset_perturbed", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "parquet", "parquet_dataconverter", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "graphs", "edges", "edges", "graph_definition", "graphs", "nodes", "nodes", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100], "i": [0, 1, 8, 10, 12, 13, 15, 17, 28, 29, 30, 35, 36, 39, 40, 44, 46, 49, 55, 56, 62, 66, 70, 71, 72, 73, 76, 78, 79, 80, 82, 84, 89, 90, 93, 94, 95, 98, 99, 100], "an": [0, 5, 30, 32, 33, 35, 40, 44, 63, 80, 93, 95, 98, 99, 100], "open": [0, 98, 99], "sourc": [0, 4, 5, 6, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 44, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99], "python": [0, 1, 5, 14, 15, 17, 28, 30, 98, 99, 100], "framework": [0, 99], "aim": [0, 1, 98, 99], "provid": [0, 1, 8, 10, 12, 13, 44, 45, 80, 98, 99, 100], "high": [0, 99], "qualiti": [0, 99], "user": [0, 45, 78, 99, 100], "friendli": [0, 99], "end": [0, 1, 5, 32, 35, 99], "function": [0, 5, 6, 8, 30, 36, 39, 44, 46, 49, 52, 53, 63, 67, 70, 71, 72, 73, 75, 76, 80, 81, 83, 88, 89, 90, 93, 94, 96, 99], "perform": [0, 46, 48, 49, 54, 56, 58, 68, 70, 71, 72, 99], "reconstruct": [0, 1, 16, 18, 19, 23, 24, 26, 33, 41, 45, 58, 69, 72, 99], "task": [0, 1, 45, 68, 70, 71, 80, 98, 99], "neutrino": [0, 1, 48, 58, 75, 99], "telescop": [0, 1, 99], "us": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 20, 25, 27, 28, 32, 33, 35, 36, 37, 38, 40, 41, 44, 45, 48, 49, 51, 56, 57, 58, 62, 63, 64, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100], "graph": [0, 1, 6, 8, 10, 12, 13, 44, 45, 48, 49, 51, 61, 62, 63, 65, 66, 73, 79, 81, 98, 99], "neural": [0, 1, 99], "network": [0, 1, 55, 99], "gnn": [0, 1, 33, 45, 55, 56, 57, 58, 63, 68, 99, 100], "make": [0, 5, 82, 88, 89, 98, 99, 100], "fast": [0, 99, 100], "easi": [0, 99], "train": [0, 1, 7, 13, 40, 41, 44, 63, 68, 78, 79, 80, 81, 82, 84, 88, 89, 91, 97, 99, 100], "complex": [0, 45, 99], "model": [0, 1, 13, 41, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 84, 86, 88, 89, 91, 97, 99, 100], "can": [0, 1, 8, 10, 12, 13, 15, 17, 20, 38, 44, 49, 63, 75, 76, 82, 84, 86, 88, 89, 98, 99, 100], "event": [0, 1, 8, 10, 12, 13, 22, 36, 38, 40, 44, 49, 63, 70, 71, 72, 73, 75, 80, 82, 88, 99], "state": [0, 99], "art": [0, 99], "arbitrari": [0, 99], "detector": [0, 1, 25, 45, 52, 53, 63, 64, 66, 68, 99], "configur": [0, 1, 8, 45, 67, 68, 75, 83, 85, 86, 88, 89, 91, 95, 99], "infer": [0, 1, 33, 41, 44, 68, 70, 71, 72, 99, 100], "time": [0, 4, 36, 46, 49, 71, 95, 99, 100], "ar": [0, 1, 4, 5, 8, 10, 12, 13, 17, 30, 32, 35, 38, 40, 44, 49, 56, 58, 60, 61, 62, 63, 64, 65, 70, 75, 80, 82, 88, 89, 98, 99, 100], "order": [0, 28, 46, 73, 99], "magnitud": [0, 99], "faster": [0, 99], "than": [0, 6, 70, 71, 72, 81, 95, 99], "tradit": [0, 99], "techniqu": [0, 99], "common": [0, 1, 80, 86, 91, 92, 94, 99], "ml": [0, 1, 99], "develop": [0, 1, 98, 99, 100], "physicist": [0, 1, 99], "wish": [0, 98, 99], "tool": [0, 1, 99], "research": [0, 99], "By": [0, 38, 70, 71, 72, 99], "unit": [0, 5, 94, 98, 99], "both": [0, 17, 70, 71, 72, 76, 99], "group": [0, 5, 32, 35, 49, 99], "increas": [0, 78, 99], "longev": [0, 99], "usabl": [0, 99], "individu": [0, 5, 8, 10, 12, 13, 49, 56, 73, 99], "code": [0, 25, 36, 63, 88, 89, 99], "contribut": [0, 99, 100], "from": [0, 1, 6, 8, 10, 12, 13, 14, 15, 17, 19, 20, 22, 28, 29, 30, 33, 35, 38, 44, 49, 58, 62, 63, 66, 67, 70, 71, 72, 73, 76, 78, 79, 80, 86, 87, 88, 89, 91, 95, 98, 99, 100], "build": [0, 1, 45, 51, 62, 66, 67, 86, 88, 89, 99], "gener": [0, 5, 8, 10, 12, 17, 44, 60, 61, 65, 70, 80, 99], "reusabl": [0, 99], "softwar": [0, 80, 99], "packag": [0, 1, 39, 90, 93, 94, 98, 99, 100], "base": [0, 4, 5, 6, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 33, 35, 38, 40, 44, 46, 48, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 70, 71, 72, 75, 78, 79, 80, 82, 84, 86, 87, 88, 89, 91, 94, 95, 99], "engin": [0, 99], "best": [0, 98, 99], "practic": [0, 98, 99], "lower": [0, 76, 99], "technic": [0, 99], "threshold": [0, 44, 62, 99], "most": [0, 1, 40, 99, 100], "scientif": [0, 1, 99], "problem": [0, 62, 98, 99], "The": [0, 5, 8, 10, 12, 28, 30, 33, 35, 36, 44, 46, 48, 49, 56, 58, 62, 63, 70, 71, 72, 73, 75, 76, 78, 79, 80, 99], "improv": [0, 1, 84, 99], "classif": [0, 1, 45, 69, 72, 80, 99], "yield": [0, 56, 75, 80, 99], "veri": [0, 40, 99], "accur": [0, 99], "e": [0, 1, 5, 6, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 32, 33, 35, 36, 40, 44, 46, 48, 49, 51, 52, 53, 55, 59, 62, 63, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 82, 86, 95, 98, 99, 100], "g": [0, 1, 5, 8, 10, 12, 13, 25, 28, 30, 32, 33, 35, 36, 40, 44, 49, 63, 70, 71, 72, 73, 82, 95, 98, 99, 100], "low": [0, 99], "energi": [0, 4, 33, 70, 71, 72, 82, 99], "observ": [0, 99], "icecub": [0, 1, 16, 29, 30, 45, 48, 50, 58, 94, 99, 100], "here": [0, 98, 99, 100], "implement": [0, 1, 5, 15, 31, 32, 34, 35, 48, 55, 56, 57, 58, 62, 80, 98, 99], "wa": [0, 99], "appli": [0, 8, 10, 12, 13, 15, 49, 55, 56, 57, 58, 59, 68, 90, 99], "oscil": [0, 74, 99], "lead": [0, 99], "signific": [0, 99], "angular": [0, 99], "rang": [0, 70, 71, 72, 99], "relev": [0, 1, 30, 39, 93, 98, 99], "studi": [0, 99], "furthermor": [0, 99], "shown": [0, 99], "could": [0, 98, 99], "muon": [0, 19, 99], "v": [0, 99], "therebi": [0, 1, 88, 89, 99], "effici": [0, 99], "puriti": [0, 99], "sampl": [0, 40, 99], "analysi": [0, 33, 99, 100], "similarli": [0, 30, 99], "ha": [0, 5, 30, 32, 35, 36, 44, 55, 80, 93, 99, 100], "great": [0, 99], "point": [0, 24, 79, 80, 99], "analys": [0, 41, 74, 99], "final": [0, 49, 78, 88, 99], "millisecond": [0, 99], "allow": [0, 41, 45, 49, 78, 86, 91, 99, 100], "whole": [0, 99], "new": [0, 1, 35, 48, 86, 91, 98, 99], "type": [0, 5, 6, 8, 10, 12, 13, 14, 15, 27, 28, 29, 32, 35, 36, 38, 39, 40, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 72, 73, 75, 76, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99], "cosmic": [0, 99], "alert": [0, 99], "which": [0, 8, 10, 12, 13, 15, 16, 25, 29, 33, 40, 44, 46, 49, 56, 67, 70, 75, 80, 84, 99, 100], "were": [0, 99], "previous": [0, 99], "unfeas": [0, 99], "possibl": [0, 28, 98, 99], "identifi": [0, 5, 8, 10, 12, 13, 25, 88, 89, 99], "10": [0, 33, 84, 99], "tev": [0, 99], "monitor": [0, 99], "rate": [0, 78, 99], "direct": [0, 58, 70, 71, 72, 77, 79, 99], "real": [0, 99], "thi": [0, 3, 5, 8, 10, 12, 13, 15, 17, 30, 32, 35, 36, 39, 44, 45, 49, 56, 66, 68, 70, 71, 72, 73, 75, 76, 78, 80, 82, 86, 88, 89, 91, 95, 98, 99, 100], "enabl": [0, 3, 99], "first": [0, 78, 86, 91, 98, 99], "ever": [0, 99], "despit": [0, 99], "larg": [0, 80, 99], "background": [0, 99], "origin": [0, 75, 99], "compris": [0, 99], "number": [0, 5, 8, 10, 12, 32, 33, 35, 40, 48, 49, 55, 56, 57, 58, 59, 62, 64, 66, 70, 71, 72, 78, 84, 99], "modul": [0, 3, 8, 30, 33, 41, 44, 45, 48, 50, 54, 60, 61, 63, 64, 65, 67, 69, 74, 77, 83, 85, 88, 89, 90, 91, 94, 99], "necessari": [0, 28, 98, 99], "workflow": [0, 99], "ingest": [0, 1, 3, 50, 99], "raw": [0, 66, 99], "data": [0, 1, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 70, 71, 72, 73, 79, 81, 84, 86, 88, 91, 94, 97, 99, 100], "domain": [0, 1, 3, 41, 99], "specif": [0, 1, 3, 5, 8, 10, 12, 16, 30, 31, 32, 34, 35, 36, 41, 46, 49, 50, 51, 52, 53, 54, 59, 62, 63, 66, 68, 69, 70, 71, 72, 80, 98, 99, 100], "format": [0, 1, 3, 5, 8, 28, 32, 35, 76, 88, 98, 99, 100], "deploi": [0, 1, 41, 44, 99], "chain": [0, 1, 41, 45, 68, 99, 100], "illustr": [0, 98, 99], "figur": [0, 76, 99], "level": [0, 8, 10, 12, 13, 25, 36, 46, 49, 62, 67, 95, 99, 100], "overview": [0, 99], "typic": [0, 28, 99], "convert": [0, 1, 3, 5, 28, 32, 35, 38, 99, 100], "industri": [0, 3, 99], "standard": [0, 3, 4, 5, 13, 32, 35, 40, 52, 53, 63, 66, 68, 84, 98, 99], "intermedi": [0, 1, 3, 5, 8, 32, 35, 55, 99, 100], "file": [0, 1, 3, 5, 8, 10, 12, 13, 15, 28, 32, 35, 38, 39, 44, 63, 67, 75, 78, 80, 84, 85, 86, 87, 88, 89, 93, 95, 99, 100], "read": [0, 3, 8, 10, 12, 13, 28, 51, 56, 68, 69, 99, 100], "simpl": [0, 45, 99], "physic": [0, 1, 15, 29, 30, 41, 44, 45, 69, 70, 71, 72, 99], "orient": [0, 45, 99], "compon": [0, 1, 45, 48, 49, 68, 99], "manag": [0, 15, 77, 99], "experi": [0, 1, 77, 99], "log": [0, 1, 71, 77, 78, 80, 83, 99, 100], "deploy": [0, 1, 42, 44, 63, 97, 99], "modular": [0, 45, 99], "subclass": [0, 45, 99], "torch": [0, 8, 10, 12, 13, 45, 48, 63, 64, 67, 68, 94, 99, 100], "nn": [0, 45, 48, 62, 64, 99], "mean": [0, 5, 8, 10, 12, 13, 32, 35, 45, 56, 58, 80, 89, 99], "onli": [0, 1, 8, 10, 12, 13, 45, 49, 70, 71, 72, 75, 82, 89, 94, 99, 100], "need": [0, 28, 45, 67, 80, 99, 100], "import": [0, 1, 36, 45, 83, 99], "few": [0, 45, 98, 99], "exist": [0, 8, 10, 12, 13, 33, 35, 36, 45, 79, 88, 99], "purpos": [0, 45, 80, 99], "built": [0, 45, 99], "them": [0, 1, 28, 45, 56, 70, 71, 72, 75, 99, 100], "togeth": [0, 45, 62, 68, 99], "form": [0, 45, 70, 86, 91, 99], "complet": [0, 45, 68, 99], "extend": [0, 1, 99], "suit": [0, 99], "through": [0, 80, 99], "layer": [0, 45, 47, 49, 55, 56, 57, 58, 70, 71, 72, 99], "connect": [0, 62, 63, 66, 80, 99], "etc": [0, 80, 95, 99], "optimis": [0, 1, 99], "differ": [0, 8, 10, 12, 13, 15, 64, 68, 98, 99, 100], "track": [0, 15, 19, 71, 98, 99], "These": [0, 63, 98, 99], "prepar": [0, 80, 99], "satisfi": [0, 99], "o": [0, 70, 71, 72, 99], "load": [0, 6, 8, 39, 67, 86, 88, 99], "requir": [0, 21, 36, 70, 80, 88, 89, 91, 99, 100], "when": [0, 5, 8, 10, 12, 13, 28, 32, 35, 36, 44, 48, 56, 58, 79, 95, 98, 99, 100], "batch": [0, 6, 33, 46, 48, 49, 68, 73, 81, 84, 99], "do": [0, 44, 80, 88, 89, 98, 99, 100], "predict": [0, 20, 24, 26, 33, 44, 55, 67, 68, 70, 71, 72, 80, 81, 99], "either": [0, 8, 10, 12, 80, 99, 100], "contain": [0, 5, 8, 10, 12, 13, 28, 29, 32, 33, 35, 44, 56, 60, 61, 63, 64, 65, 67, 70, 71, 72, 80, 82, 84, 99, 100], "imag": [0, 1, 98, 99, 100], "portabl": [0, 99], "depend": [0, 99, 100], "free": [0, 80, 99], "split": [0, 46, 99], "up": [0, 5, 32, 35, 44, 98, 99, 100], "interfac": [0, 74, 99, 100], "block": [0, 1, 99], "pre": [0, 13, 51, 63, 79, 98, 99], "directli": [0, 15, 99], "while": [0, 17, 78, 99], "continu": [0, 80, 99], "expand": [0, 99], "": [0, 5, 6, 8, 10, 12, 13, 15, 28, 35, 38, 55, 56, 68, 70, 71, 72, 73, 78, 82, 84, 88, 89, 95, 96, 99, 100], "capabl": [0, 99], "project": [0, 98, 99], "receiv": [0, 99], "fund": [0, 99], "european": [0, 99], "union": [0, 6, 8, 10, 12, 13, 17, 28, 30, 44, 46, 48, 49, 56, 67, 68, 70, 71, 72, 88, 91, 93, 99], "horizon": [0, 99], "2020": [0, 99], "innov": [0, 99], "programm": [0, 99], "under": [0, 13, 99], "mari": [0, 99], "sk\u0142odowska": [0, 99], "curi": [0, 99], "grant": [0, 80, 99], "agreement": [0, 98, 99], "No": [0, 99], "890778": [0, 99], "work": [0, 4, 29, 98, 99, 100], "rasmu": [0, 57, 99], "\u00f8rs\u00f8e": [0, 99], "partli": [0, 99], "punch4nfdi": [0, 99], "consortium": [0, 99], "support": [0, 30, 98, 99, 100], "dfg": [0, 99], "nfdi": [0, 99], "39": [0, 99, 100], "1": [0, 5, 8, 28, 32, 35, 40, 46, 49, 56, 58, 62, 64, 70, 71, 72, 73, 78, 80, 82, 88, 99, 100], "germani": [0, 99], "conveni": [1, 98, 100], "collabor": 1, "solv": [1, 98], "It": [1, 28, 36, 44, 98], "leverag": 1, "advanc": [1, 49], "machin": [1, 100], "learn": [1, 78, 100], "without": [1, 62, 66, 75, 80, 100], "have": [1, 5, 17, 32, 35, 36, 40, 49, 63, 70, 71, 72, 98, 100], "expert": 1, "themselv": [1, 88, 89], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 8, 10, 12, 13, 15, 17, 32, 35, 36, 44, 48, 49, 51, 56, 59, 63, 67, 72, 80, 86, 87, 88, 89, 90, 91, 95, 98, 100], "streamlin": 1, "process": [1, 5, 13, 15, 44, 51, 56, 98, 100], "transform": [1, 49, 70, 71, 72, 82], "extens": [1, 93], "basic": 1, "across": [1, 2, 8, 10, 12, 13, 30, 37, 49, 68, 80, 83, 84, 85, 95], "variou": 1, "easili": 1, "architectur": [1, 55, 56, 57, 58, 68], "main": [1, 54, 63, 68, 98, 100], "featur": [1, 3, 4, 5, 8, 10, 12, 13, 16, 33, 44, 48, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 73, 81, 88, 98], "i3": [1, 5, 15, 29, 30, 32, 35, 39, 44, 93, 100], "more": [1, 8, 36, 39, 86, 88, 89, 91, 95], "index": [1, 5, 8, 10, 12, 30, 36, 49, 78], "sqlite": [1, 3, 7, 12, 13, 33, 35, 36, 38, 100], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 8, 51, 59, 63, 67, 72, 87], "awai": 1, "detail": [1, 100], "expos": 1, "physicst": 1, "what": [1, 63, 98], "i3modul": [1, 41, 44], "includ": [1, 13, 67, 68, 75, 80, 86, 98], "docker": 1, "run": [1, 38], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 7, 14, 41, 45, 60, 83], "dataset": [1, 3, 6, 9, 10, 11, 12, 13, 19, 40, 63, 84, 88], "extractor": [1, 3, 5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 44], "parquet": [1, 3, 7, 10, 32, 38, 100], "util": [1, 3, 14, 28, 29, 30, 36, 38, 39, 40, 45, 77, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97], "constant": [1, 3, 97], "dataconvert": [1, 3, 32, 35], "dataload": [1, 3, 33, 63, 67, 68, 81, 91], "pipelin": [1, 3], "coarsen": [1, 45, 49], "standard_model": [1, 45], "pisa": [1, 21, 33, 75, 76, 94, 97, 100], "fit": [1, 67, 74, 76, 80, 82, 91], "plot": [1, 74], "callback": [1, 67, 77], "label": [1, 8, 19, 22, 55, 63, 68, 72, 76, 77, 81], "loss_funct": [1, 70, 71, 72, 77], "weight_fit": [1, 77], "config": [1, 6, 40, 75, 80, 83, 84, 86, 87, 88, 89, 90, 91], "argpars": [1, 83], "decor": [1, 5, 83, 94], "filesi": [1, 83], "math": [1, 83], "submodul": [1, 3, 7, 9, 11, 14, 27, 31, 34, 37, 42, 45, 47, 50, 54, 60, 61, 65, 69, 74, 77, 83, 85, 90], "global": [2, 4, 56, 58, 67], "i3extractor": [3, 5, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 35], "i3featureextractor": [3, 4, 14, 35, 44], "i3genericextractor": [3, 14, 35], "i3hybridrecoextractor": [3, 14], "i3ntmuonlabelsextractor": [3, 14], "i3particleextractor": [3, 14], "i3pisaextractor": [3, 14], "i3quesoextractor": [3, 14], "i3retroextractor": [3, 14], "i3splinempeextractor": [3, 14], "i3truthextractor": [3, 4, 14], "i3tumextractor": [3, 14], "parquet_dataconvert": [3, 31], "sqlite_dataconvert": [3, 34], "sqlite_util": [3, 34], "parquet_to_sqlit": [3, 37], "random": [3, 8, 10, 12, 37, 40, 88], "string_selection_resolv": [3, 37], "truth": [3, 4, 8, 10, 12, 13, 16, 25, 33, 36, 63, 81, 82, 88], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "collate_fn": [3, 6, 77, 81], "do_shuffl": [3, 6], "insqlitepipelin": [3, 33], "class": [4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 38, 40, 44, 46, 48, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 70, 71, 72, 75, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 91, 95, 98], "object": [4, 5, 8, 10, 12, 13, 15, 17, 28, 30, 44, 49, 51, 63, 70, 71, 72, 75, 84, 95], "namespac": [4, 67], "name": [4, 5, 6, 8, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 36, 38, 44, 62, 63, 64, 66, 67, 70, 71, 72, 75, 79, 82, 84, 86, 88, 89, 90, 91, 95, 98, 100], "icecube86": [4, 50, 52], "dom_x": [4, 44, 46], "dom_i": [4, 44, 46], "dom_z": [4, 44, 46], "dom_tim": 4, "charg": [4, 44, 80], "rde": [4, 46], "pmt_area": [4, 46], "deepcor": [4, 16, 52], "upgrad": [4, 16, 52, 100], "string": [4, 5, 8, 10, 12, 13, 28, 32, 35, 40, 49, 86], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 45, 50], "sensor_pos_x": 4, "sensor_pos_i": 4, "sensor_pos_z": 4, "t": [4, 30, 36, 76, 78, 80, 100], "kaggl": [4, 48, 52, 58], "x": [4, 5, 25, 32, 35, 48, 49, 66, 67, 72, 73, 76, 80, 82], "y": [4, 25, 73, 76, 100], "z": [4, 5, 25, 32, 35, 73, 100], "auxiliari": 4, "energy_track": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 71, 79], "zenith": [4, 71, 79], "pid": [4, 40, 88], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": [4, 71], "inelast": [4, 71], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 15], "str": [5, 6, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 44, 46, 48, 49, 51, 52, 53, 56, 58, 62, 63, 64, 66, 67, 68, 70, 71, 72, 75, 79, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 95], "gcd_file": [5, 15, 44], "paramet": [5, 6, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 44, 46, 48, 49, 51, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96], "output_fil": [5, 32, 35], "global_index": 5, "avail": [5, 17, 33, 94], "pool": [5, 45, 46, 47, 56, 58], "worker": [5, 32, 33, 35, 39, 84, 95], "return": [5, 6, 8, 10, 12, 13, 15, 28, 29, 30, 32, 35, 36, 38, 39, 40, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 70, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96], "none": [5, 6, 8, 10, 12, 13, 15, 17, 25, 29, 30, 32, 33, 35, 36, 38, 40, 46, 48, 49, 56, 58, 62, 63, 64, 66, 67, 68, 70, 71, 72, 75, 78, 80, 81, 82, 84, 86, 87, 88, 90, 93, 95], "synchron": 5, "list": [5, 6, 8, 10, 12, 13, 15, 17, 25, 28, 30, 32, 33, 35, 36, 38, 39, 40, 44, 46, 48, 49, 51, 56, 58, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 78, 80, 81, 82, 88, 90, 91, 93, 95], "process_method": 5, "cach": 5, "output": [5, 32, 35, 38, 55, 56, 57, 59, 66, 67, 68, 75, 82, 88, 89, 100], "typevar": 5, "f": [5, 49], "bound": [5, 76], "callabl": [5, 6, 8, 30, 48, 49, 51, 52, 53, 63, 70, 71, 72, 81, 82, 86, 88, 89, 90, 94], "ani": [5, 6, 8, 10, 12, 28, 29, 30, 32, 35, 44, 48, 49, 56, 62, 63, 67, 68, 70, 72, 76, 80, 82, 84, 86, 87, 88, 89, 90, 91, 95, 100], "outdir": [5, 32, 33, 35, 38, 75], "gcd_rescu": [5, 32, 35, 93], "nb_files_to_batch": [5, 32, 35], "sequential_batch_pattern": [5, 32, 35], "input_file_batch_pattern": [5, 32, 35], "index_column": [5, 8, 10, 12, 13, 32, 35, 36, 40, 67, 68, 75, 81, 82, 88], "icetray_verbos": [5, 32, 35], "abc": [5, 8, 15, 33, 67, 79, 82, 87], "logger": [5, 8, 15, 33, 38, 40, 62, 67, 79, 82, 83, 95, 100], "construct": [5, 6, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 35, 38, 40, 46, 47, 48, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 78, 79, 80, 81, 82, 84, 87, 88, 89, 95], "regular": [5, 30, 32, 35], "express": [5, 32, 35, 67, 80], "accord": [5, 13, 32, 35, 46, 49, 62], "match": [5, 32, 35, 82, 93, 96], "certain": [5, 32, 35, 38, 75], "pattern": [5, 32, 35], "wildcard": [5, 32, 35], "same": [5, 30, 32, 35, 36, 46, 49, 70, 73, 78, 90, 95], "input": [5, 8, 10, 12, 13, 32, 33, 35, 44, 52, 55, 56, 57, 58, 59, 63, 66, 70, 72, 73, 86, 91], "replac": [5, 32, 35, 86, 88, 89, 91], "period": [5, 32, 35], "special": [5, 17, 32, 35, 44, 73], "interpret": [5, 32, 35, 70], "liter": [5, 32, 35], "charact": [5, 32, 35], "regex": [5, 32, 35], "For": [5, 30, 32, 35, 78], "instanc": [5, 8, 15, 25, 30, 32, 35, 44, 63, 67, 75, 79, 81, 87, 100], "A": [5, 8, 32, 33, 35, 44, 49, 64, 73, 75, 80, 82, 100], "_": [5, 32, 35], "0": [5, 8, 10, 12, 32, 35, 40, 44, 46, 49, 55, 56, 58, 62, 64, 73, 75, 76, 80, 88], "9": [5, 32, 35], "5": [5, 8, 10, 12, 32, 35, 40, 84, 100], "zst": [5, 32, 35], "find": [5, 32, 35, 93], "whose": [5, 32, 35, 44], "one": [5, 8, 32, 35, 36, 44, 49, 67, 88, 89, 93, 98, 100], "capit": [5, 32, 35], "letter": [5, 32, 35], "follow": [5, 32, 35, 56, 68, 80, 82, 98, 100], "underscor": [5, 32, 35], "five": [5, 32, 35], "upgrade_genie_step4_141020_a_000000": [5, 32, 35], "upgrade_genie_step4_141020_a_000001": [5, 32, 35], "upgrade_genie_step4_141020_a_000008": [5, 32, 35], "upgrade_genie_step4_141020_a_000009": [5, 32, 35], "would": [5, 32, 35, 98], "upgrade_genie_step4_141020_a_00000x": [5, 32, 35], "suffix": [5, 32, 35], "upgrade_genie_step4_141020_a_000010": [5, 32, 35], "separ": [5, 28, 32, 35, 78, 100], "upgrade_genie_step4_141020_a_00001x": [5, 32, 35], "int": [5, 6, 8, 10, 12, 13, 19, 22, 32, 33, 35, 40, 48, 49, 55, 56, 57, 58, 59, 62, 64, 66, 67, 68, 70, 71, 72, 73, 75, 78, 80, 81, 82, 84, 88, 91, 95], "properti": [5, 8, 15, 20, 30, 49, 59, 66, 68, 72, 79, 87, 95], "file_suffix": [5, 32, 35], "execut": [5, 36], "method": [5, 8, 10, 12, 15, 27, 28, 29, 30, 32, 35, 44, 48, 49, 71, 80, 82], "set": [5, 17, 70, 71, 72, 98], "inherit": [5, 15, 30, 51, 66, 80, 95], "path": [5, 8, 10, 12, 13, 36, 39, 44, 63, 67, 75, 76, 84, 86, 87, 88, 93, 100], "correspond": [5, 8, 10, 12, 13, 28, 30, 35, 39, 56, 63, 82, 93, 100], "gcd": [5, 15, 29, 39, 44, 93], "save_data": [5, 32, 35], "save": [5, 15, 28, 32, 35, 36, 67, 75, 80, 81, 82, 86, 87, 88, 89, 100], "ordereddict": [5, 32, 35], "extract": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 35, 38, 39, 44, 70, 71, 72], "merge_fil": [5, 32, 35], "input_fil": [5, 32, 35], "merg": [5, 32, 35, 80, 100], "result": [5, 32, 35, 49, 78, 80, 81, 90, 100], "option": [5, 8, 10, 12, 13, 25, 32, 33, 35, 48, 49, 56, 58, 63, 64, 67, 70, 71, 72, 75, 76, 80, 82, 83, 84, 86, 88, 93, 100], "default": [5, 8, 10, 12, 13, 17, 25, 28, 32, 33, 35, 36, 38, 44, 48, 49, 55, 56, 57, 58, 62, 63, 64, 66, 67, 70, 71, 72, 75, 76, 78, 79, 80, 82, 84, 86, 88, 93], "current": [5, 32, 35, 40, 78, 98, 100], "rais": [5, 8, 17, 32, 67, 86, 91], "notimplementederror": [5, 32], "If": [5, 8, 17, 32, 33, 35, 67, 70, 71, 72, 75, 78, 82, 98, 100], "been": [5, 32, 44, 80, 98], "backend": [5, 9, 11, 32, 35], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 8, 10, 12, 13, 16, 17, 35, 36, 44, 52, 53, 86, 88, 89, 91], "pure": [5, 14, 15, 17, 30], "multiprocess": [5, 100], "tupl": [5, 8, 10, 12, 29, 30, 48, 56, 58, 70, 71, 72, 73, 75, 76, 81, 84], "remov": [6, 81, 84], "less": [6, 81], "two": [6, 56, 75, 78, 80, 81], "dom": [6, 8, 10, 12, 13, 46, 49, 81], "hit": [6, 81], "should": [6, 8, 10, 12, 13, 15, 28, 40, 48, 49, 80, 81, 86, 88, 89, 91, 98, 100], "occur": [6, 81], "product": [6, 81], "selection_nam": 6, "check": [6, 29, 30, 35, 36, 84, 93, 94, 98, 100], "whether": [6, 29, 30, 35, 36, 56, 67, 80, 90, 93, 94], "shuffl": [6, 39, 81], "select": [6, 8, 10, 12, 13, 22, 40, 81, 82, 88, 98], "bool": [6, 29, 30, 35, 36, 40, 44, 46, 56, 67, 68, 75, 78, 80, 81, 82, 84, 90, 93, 94, 95], "batch_siz": [6, 33, 73, 81], "num_work": [6, 81], "persistent_work": [6, 81], "prefetch_factor": 6, "kwarg": [6, 48, 62, 67, 70, 72, 80, 82, 86, 95], "t_co": 6, "classmethod": [6, 8, 67, 80, 86, 87], "from_dataset_config": 6, "datasetconfig": [6, 8, 40, 85, 88], "dict": [6, 8, 13, 17, 28, 30, 33, 35, 51, 52, 53, 63, 67, 68, 75, 76, 78, 80, 81, 84, 86, 88, 89, 90, 91], "parquet_dataset": [7, 9], "sqlite_dataset": [7, 11], "sqlite_dataset_perturb": [7, 11], "columnmissingexcept": [7, 8], "load_modul": [7, 8, 67], "parse_graph_definit": [7, 8], "ensembledataset": [7, 8, 88], "except": 8, "indic": [8, 40, 49, 78, 84, 98], "miss": 8, "column": [8, 10, 12, 13, 36, 44, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 75, 82], "class_nam": [8, 62, 67, 89, 95], "cfg": 8, "graphdefinit": [8, 10, 12, 44, 60, 61, 63, 64, 65, 68, 81], "graph_definit": [8, 10, 12, 44, 45, 60, 68, 81, 88], "pulsemap": [8, 10, 12, 13, 16, 35, 44, 81, 88], "node_truth": [8, 10, 12, 13, 81, 88], "truth_tabl": [8, 10, 12, 13, 75, 81, 82, 88], "node_truth_t": [8, 10, 12, 13, 81, 88], "string_select": [8, 10, 12, 13, 81, 88], "dtype": [8, 10, 12, 13, 63, 64, 96], "loss_weight_t": [8, 10, 12, 13, 81, 88], "loss_weight_column": [8, 10, 12, 13, 63, 81, 88], "loss_weight_default_valu": [8, 10, 12, 13, 63, 88], "seed": [8, 10, 12, 40, 81, 88], "puls": [8, 10, 12, 13, 16, 17, 29, 30, 35, 36, 44, 46, 49, 66, 73], "seri": [8, 10, 12, 13, 16, 17, 29, 30, 36, 44], "node": [8, 10, 12, 13, 45, 46, 49, 55, 56, 58, 60, 61, 62, 63, 64, 70, 71, 72, 73], "multipl": [8, 10, 12, 13, 15, 78, 88, 95], "store": [8, 10, 12, 13, 15, 33, 36, 75, 79], "ad": [8, 10, 12, 13, 16, 56, 63, 75], "attribut": [8, 10, 12, 13, 46, 70, 71, 72], "event_no": [8, 10, 12, 13, 36, 40, 82, 88], "uniqu": [8, 10, 12, 13, 36, 38, 88], "indici": [8, 10, 12, 13, 29, 40, 80], "tabl": [8, 10, 12, 13, 15, 33, 35, 36, 63, 75, 82], "inform": [8, 10, 12, 13, 15, 17, 25, 76], "subset": [8, 10, 12, 13, 48, 56, 58], "given": [8, 10, 12, 13, 35, 49, 62, 70, 71, 72, 82, 84], "queri": [8, 10, 12, 36, 40], "pass": [8, 10, 12, 48, 55, 56, 57, 58, 59, 63, 67, 68, 70, 71, 72, 80, 82, 98], "float32": [8, 10, 12, 13, 63, 64], "tensor": [8, 10, 12, 13, 46, 48, 49, 51, 55, 56, 57, 58, 59, 66, 67, 68, 70, 71, 72, 73, 80, 96], "per": [8, 10, 12, 13, 17, 36, 49, 70, 71, 72, 80, 82], "loss": [8, 10, 12, 13, 63, 68, 70, 71, 72, 78, 80, 84], "weight": [8, 10, 12, 13, 63, 70, 71, 72, 75, 80, 82, 89, 100], "also": [8, 10, 12, 13, 40, 88], "assign": [8, 10, 12, 13, 38, 46, 49, 98], "float": [8, 10, 12, 13, 44, 46, 55, 62, 63, 67, 75, 76, 78, 80, 81, 88], "note": [8, 10, 12, 13, 76, 89], "valu": [8, 10, 12, 13, 25, 28, 35, 36, 49, 63, 76, 79, 80, 84, 86], "specifi": [8, 10, 12, 13, 40, 46, 70, 71, 72, 76, 78, 100], "case": [8, 10, 12, 13, 17, 44, 49, 70, 71, 72, 100], "That": [8, 10, 12, 13, 56, 71, 79], "ignor": [8, 10, 12, 13, 30], "resolv": [8, 10, 12, 40], "10000": [8, 10, 12, 40], "20": [8, 10, 12, 40, 95], "defin": [8, 10, 12, 40, 44, 49, 60, 61, 62, 63, 65, 86, 88, 89, 91], "represent": [8, 10, 12, 30, 49, 64], "from_config": [8, 67, 87, 88, 89], "concaten": [8, 28, 56], "query_t": [8, 10, 12], "sequential_index": [8, 10, 12], "some": [8, 10, 12, 63], "out": [8, 56, 68, 69, 80, 95, 98, 100], "sequenti": 8, "len": 8, "self": [8, 63, 75, 86, 91], "_may_": 8, "_indic": 8, "entir": [8, 67], "impos": 8, "befor": [8, 56, 70, 71, 72, 78], "scalar": [8, 73, 80], "length": [8, 30, 78], "element": [8, 28, 30, 68, 73, 90], "present": [8, 84, 93, 94], "add_label": 8, "fn": [8, 30, 86, 90], "kei": [8, 17, 28, 29, 30, 35, 36, 46, 49, 79, 88, 89], "add": [8, 56, 84, 98, 100], "custom": [8, 63, 78], "concatdataset": 8, "singl": [8, 15, 49, 56, 79, 88, 89], "collect": [8, 14, 15, 27, 80, 96], "iter": 8, "parquetdataset": [9, 10], "pytorch": [10, 12, 13, 78, 100], "sqlitedataset": [11, 12, 13], "sqlitedatasetperturb": [11, 13], "databas": [12, 13, 33, 35, 36, 38, 75, 82, 100], "perturb": 13, "perturbation_dict": 13, "step": [13, 68, 78], "where": [13, 63, 64, 66, 79], "randomli": [13, 40, 89], "nois": [13, 16, 29, 44], "intend": [13, 100], "test": [13, 40, 70, 71, 72, 81, 88, 94, 98], "stabil": 13, "small": [13, 80], "chang": [13, 75, 80, 98], "dictionari": [13, 28, 29, 30, 33, 35, 63, 75, 76, 86, 88, 89, 91], "deviat": 13, "i3fram": [14, 15, 17, 29, 30, 44], "frame": [14, 15, 17, 27, 30, 35, 44], "i3extractorcollect": [14, 15], "i3featureextractoricecube86": [14, 16], "i3featureextractoricecubedeepcor": [14, 16], "i3featureextractoricecubeupgrad": [14, 16], "i3pulsenoisetruthflagicecubeupgrad": [14, 16], "i3galacticplanehybridrecoextractor": [14, 18], "i3ntmuonlabelextractor": [14, 19], "i3splinempeicextractor": [14, 24], "__call__": 15, "icetrai": [15, 29, 30, 44, 94], "keep": 15, "proven": 15, "set_fil": 15, "refer": [15, 88], "being": [15, 44, 70, 71, 72], "get": [15, 29, 78, 81, 100], "treat": 15, "86": [16, 52], "flag": [16, 44], "exclude_kei": 17, "dynam": [17, 48, 56, 57, 58], "pars": [17, 76, 83, 84, 85, 86, 91], "call": [17, 30, 35, 49, 75, 82, 95], "tri": [17, 30], "automat": [17, 80, 98], "cast": [17, 30], "done": [17, 49, 95, 98], "recurs": [17, 30, 90, 93], "each": [17, 28, 30, 36, 38, 39, 46, 49, 52, 53, 56, 58, 62, 63, 64, 66, 67, 70, 71, 72, 73, 75, 76, 78, 93], "look": [17, 100], "member": [17, 30, 88, 89, 95], "variabl": [17, 30, 56, 73, 82, 95], "signatur": [17, 30], "similar": [17, 30, 100], "handl": [17, 80, 84, 95], "hand": 17, "mc": [17, 35, 36], "tree": [17, 35], "trigger": 17, "exclud": [17, 38, 100], "valueerror": [17, 67], "hybrid": 18, "galatict": 18, "plane": [18, 80], "tum": [19, 26], "dnn": [19, 26], "padding_valu": [19, 22], "northeren": 19, "i3particl": 20, "other": [20, 36, 62, 80, 98], "algorithm": 20, "comparison": [20, 80], "quantiti": [21, 70, 71, 72, 73], "queso": 22, "retro": [23, 33], "splinemp": 24, "border": 25, "mctree": [25, 29], "ndarrai": [25, 82], "arrai": [25, 28, 63], "boundari": 25, "volum": 25, "coordin": [25, 73], "particl": [25, 36, 79], "start": [25, 98, 100], "stop": [25, 84], "within": [25, 46, 48, 49, 56, 62], "hard": 25, "i3mctre": 25, "flatten_nested_dictionari": [27, 28], "serialis": [27, 28], "transpose_list_of_dict": [27, 28], "frame_is_montecarlo": [27, 29], "frame_is_nois": [27, 29], "get_om_keys_and_pulseseri": [27, 29], "is_boost_enum": [27, 30], "is_boost_class": [27, 30], "is_icecube_class": [27, 30], "is_typ": [27, 30], "is_method": [27, 30], "break_cyclic_recurs": [27, 30], "get_member_vari": [27, 30], "cast_object_to_pure_python": [27, 30], "cast_pulse_series_to_pure_python": [27, 30], "manipul": [28, 60, 61, 65], "obj": [28, 30, 90], "parent_kei": 28, "flatten": 28, "nest": 28, "non": [28, 30, 35, 36, 80], "exampl": [28, 40, 46, 49, 80, 88, 89, 100], "d": [28, 63, 66, 98], "b": [28, 46, 49], "c": [28, 49, 80, 100], "2": [28, 49, 56, 58, 62, 64, 71, 73, 75, 76, 80, 88, 100], "a__b": 28, "applic": 28, "combin": [28, 88], "parent": 28, "__": [28, 30], "nester": 28, "json": [28, 88], "therefor": 28, "we": [28, 30, 40, 98, 100], "outer": 28, "abl": [28, 100], "de": 28, "transpos": 28, "mont": 29, "carlo": 29, "simul": [29, 44], "pulseseri": 29, "calibr": [29, 30], "gcd_dict": [29, 30], "p": [29, 35, 80], "om": [29, 30], "dataclass": 29, "i3calibr": 29, "indicesfor": 29, "boost": 30, "enum": 30, "ensur": [30, 39, 80, 95, 98, 100], "isn": 30, "return_discard": 30, "valid": [30, 40, 68, 70, 71, 72, 80, 84, 86, 91], "mangl": 30, "take": [30, 35, 49, 98], "mainli": 30, "cannot": [30, 86, 91], "trivial": [30, 72], "doe": [30, 89], "try": 30, "equival": 30, "its": 30, "like": [30, 49, 73, 80, 96, 98], "otherwis": [30, 80], "itself": [30, 70, 71, 72], "deem": 30, "wai": [30, 40, 98, 100], "optic": 30, "found": [30, 80], "parquetdataconvert": [31, 32], "module_dict": 33, "devic": 33, "retro_table_nam": 33, "n_worker": [33, 75], "pipeline_nam": 33, "creat": [33, 35, 36, 63, 86, 87, 91, 98, 100], "initialis": [33, 89], "gnn_module_for_energy_regress": 33, "modulelist": 33, "comput": [33, 68, 70, 71, 72, 73, 80], "directori": [33, 38, 75, 93], "100": [33, 100], "size": [33, 48, 49, 56, 57, 58, 84], "alreadi": [33, 36, 100], "error": [33, 80, 95, 98], "prompt": 33, "avoid": [33, 95, 98], "overwrit": [33, 78], "sqlitedataconvert": [34, 35, 100], "construct_datafram": [34, 35], "is_pulse_map": [34, 35], "is_mc_tre": [34, 35], "database_exist": [34, 36], "database_table_exist": [34, 36], "run_sql_cod": [34, 36], "save_to_sql": [34, 36], "attach_index": [34, 36], "create_t": [34, 36], "create_table_and_save_to_sql": [34, 36], "db": [35, 81], "max_table_s": 35, "maximum": [35, 49, 70, 71, 72, 84], "row": [35, 36], "exce": 35, "limit": [35, 80], "any_pulsemap_is_non_empti": 35, "data_dict": 35, "empti": [35, 44], "retriev": 35, "splitinicepuls": 35, "least": [35, 98, 100], "true": [35, 36, 44, 75, 78, 80, 82, 88, 89, 91], "becaus": [35, 39], "instead": [35, 80, 86, 91], "alwai": 35, "panda": [35, 40, 82], "datafram": [35, 36, 40, 67, 68, 75, 81, 82], "table_nam": [35, 36], "database_path": [36, 75, 82], "df": 36, "must": [36, 46, 78, 82, 98], "attach": 36, "default_typ": 36, "null": 36, "integer_primary_kei": 36, "NOT": [36, 80], "integ": [36, 56, 57, 80], "primari": 36, "Such": 36, "appropri": [36, 70, 71, 72], "expect": [36, 40, 44, 66], "doesn": 36, "parquettosqliteconvert": [37, 38], "pairwise_shuffl": [37, 39], "stringselectionresolv": [37, 40], "parquet_path": 38, "mc_truth_tabl": 38, "excluded_field": 38, "id": 38, "everi": [38, 100], "field": [38, 76, 79, 86, 88, 89, 91], "One": [38, 76], "choos": 38, "argument": [38, 82, 84, 86, 88, 89, 91], "exclude_field": 38, "database_nam": 38, "convers": [38, 100], "rng": 39, "relat": [39, 93], "i3_list": [39, 93], "gcd_list": [39, 93], "correpond": 39, "handi": 39, "even": 39, "files_list": 39, "gcd_shuffl": 39, "i3_shuffl": 39, "use_cach": 40, "flexibl": 40, "below": [40, 76, 82, 98, 100], "show": [40, 78], "involv": 40, "cover": 40, "yml": [40, 84, 88, 89], "50000": [40, 88], "ab": [40, 80, 88], "12": [40, 88], "14": [40, 88], "16": [40, 88], "13": [40, 100], "compat": 40, "syntax": [40, 80], "mai": [40, 66, 100], "fix": 40, "graphnet_modul": [41, 42], "graphneti3modul": [42, 44], "i3inferencemodul": [42, 44], "i3pulsecleanermodul": [42, 44], "pulsemap_extractor": 44, "produc": [44, 79, 82], "write": [44, 100], "constructor": 44, "knngraph": [44, 60, 64], "associ": [44, 63, 71, 80], "model_nam": [44, 75], "prediction_column": [44, 67, 68, 81], "pulsmap": 44, "standardmodel": [44, 45, 68], "pickl": 44, "Will": [44, 62], "help": [44, 84, 98], "entri": [44, 56, 76, 84], "dynedg": [44, 45, 54, 57, 58], "energy_reco": 44, "discard_empty_ev": 44, "clean": [44, 98, 100], "assum": [44, 51, 72, 73], "7": [44, 49, 75], "consid": [44, 100], "posit": [44, 49, 71], "signal": 44, "els": 44, "fals": [44, 56, 67, 75, 78, 80, 82, 88], "elimin": 44, "speed": 44, "especi": 44, "sinc": [44, 80], "further": 44, "calcul": [44, 62, 64, 68, 73, 79, 80], "convnet": [45, 54], "dynedge_jinst": [45, 54], "dynedge_kaggle_tito": [45, 54], "edg": [45, 48, 49, 56, 57, 58, 60, 63, 64, 65, 66, 73], "unbatch_edge_index": [45, 46], "attributecoarsen": [45, 46], "domcoarsen": [45, 46], "customdomcoarsen": [45, 46], "domandtimewindowcoarsen": [45, 46], "calculate_xyzt_homophili": [45, 73], "calculate_distance_matrix": [45, 73], "knn_graph_batch": [45, 73], "oper": [46, 48, 54, 56], "cluster": [46, 48, 49, 56, 58], "local": [46, 84], "edge_index": [46, 48, 73], "vector": [46, 49, 80], "longtensor": [46, 49, 73], "mathbf": [46, 49], "ldot": [46, 49], "n": [46, 49, 80], "reduc": 46, "transfer_attribut": 46, "reduce_opt": 46, "avg": 46, "avg_pool": 46, "avg_pool_x": 46, "max": [46, 48, 56, 58, 80, 84], "max_pool": [46, 49], "max_pool_x": [46, 49], "min": [46, 49, 56, 58], "min_pool": [46, 47, 49], "min_pool_x": [46, 47, 49], "sum": [46, 49, 56, 58, 68], "sum_pool": [46, 47, 49], "sum_pool_x": [46, 47, 49], "forward": [46, 48, 51, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 72, 80], "simplecoarsen": 46, "addit": [46, 48, 67, 68, 80, 82], "time_window": 46, "time_kei": 46, "window": 46, "dynedgeconv": [47, 48, 56], "edgeconvtito": [47, 48], "dyntran": [47, 48, 58], "sum_pool_and_distribut": [47, 49], "group_bi": [47, 49], "group_pulses_to_dom": [47, 49], "group_pulses_to_pmt": [47, 49], "std_pool_x": [47, 49], "std_pool": [47, 49], "aggr": 48, "nb_neighbor": 48, "features_subset": [48, 56, 58], "edgeconv": 48, "lightningmodul": [48, 67, 78, 95], "convolut": [48, 55, 56, 57, 58], "mlp": [48, 56], "aggreg": [48, 49], "8": [48, 49, 56, 64, 80, 98, 100], "neighbour": [48, 56, 58, 62, 64, 73], "after": [48, 56, 78, 84], "sequenc": 48, "slice": [48, 56, 58], "sparsetensor": 48, "messagepass": 48, "tito": [48, 58], "solut": [48, 58, 98], "deep": [48, 58], "competit": [48, 52, 58], "reset_paramet": 48, "reset": 48, "learnabl": [48, 54, 55, 56, 57, 58, 59], "messag": [48, 78, 95], "x_i": 48, "x_j": 48, "layer_s": 48, "n_head": 48, "dyntrans1": 48, "head": 48, "multiheadattent": 48, "just": [49, 100], "negat": 49, "cluster_index": 49, "distribut": [49, 56, 71, 80, 82], "ident": [49, 72], "pmt": 49, "f1": 49, "f2": 49, "6": [49, 76, 98], "groupbi": 49, "3": [49, 55, 58, 71, 73, 75, 76, 80, 98, 100], "matrix": [49, 62, 73, 80], "mathbb": 49, "r": [49, 62, 100], "n_1": 49, "n_b": 49, "obtain": [49, 80], "wise": 49, "dens": 49, "fc": 49, "known": 49, "std": 49, "repres": [49, 63, 64, 66, 86, 88, 89], "averag": [49, 80], "torch_geometr": 49, "version": [49, 70, 71, 72, 78, 98, 100], "standardis": 50, "icecubekaggl": [50, 52], "icecubedeepcor": [50, 52], "icecubeupgrad": [50, 52], "ins": 51, "feature_map": [51, 52, 53], "node_featur": [51, 63], "node_feature_nam": [51, 63, 64, 66], "adjac": 51, "dimens": [52, 53, 55, 56, 58, 80], "prototyp": 53, "dynedgejinst": [54, 57], "dynedgetito": [54, 58], "author": [55, 57, 80], "martin": 55, "minh": 55, "nb_input": [55, 56, 57, 58, 59, 70, 71, 72], "nb_output": [55, 57, 59, 66, 70, 72], "nb_intermedi": 55, "dropout_ratio": 55, "128": [55, 56, 84], "fraction": 55, "drop": 55, "nb_neighbour": 56, "dynedge_layer_s": 56, "post_processing_layer_s": 56, "readout_layer_s": 56, "global_pooling_schem": [56, 58], "add_global_variables_after_pool": 56, "k": [56, 58, 62, 64, 73, 80], "nearest": [56, 58, 62, 64, 73], "latent": [56, 58, 70], "metric": [56, 58, 78], "dimenion": [56, 58], "multi": 56, "perceptron": 56, "256": 56, "336": 56, "hidden": [56, 57, 70, 72], "skip": 56, "post": 56, "_and_": 56, "As": 56, "last": [56, 70, 72, 78], "scheme": [56, 58], "altern": [56, 80, 98], "exact": [57, 80], "2209": 57, "03042": 57, "oerso": 57, "layer_size_scal": 57, "4": [57, 58, 71, 76], "scale": [57, 63, 70, 71, 72, 80], "ic": 58, "univers": 58, "south": 58, "pole": 58, "dyntrans_layer_s": 58, "core": 59, "edgedefinit": [60, 61, 62, 63, 65], "how": [60, 61, 65], "drawn": [60, 61, 64, 65], "between": [60, 61, 62, 65, 68, 73, 78, 80], "knnedg": [61, 62], "radialedg": [61, 62], "euclideanedg": [61, 62], "log_fold": [62, 67, 95], "_construct_edg": 62, "nb_nearest_neighbour": [62, 64], "definit": [62, 63, 64, 66, 67], "space": [62, 82], "distanc": [62, 64, 73], "radiu": 62, "sphere": 62, "chosen": [62, 95], "centr": 62, "radial": 62, "center": 62, "sigma": 62, "euclidean": [62, 98], "see": [62, 63, 78, 98, 100], "http": [62, 63, 80, 98], "arxiv": [62, 80], "org": [62, 80, 100], "pdf": 62, "1809": 62, "06166": 62, "hold": 63, "alter": 63, "dure": [63, 70, 71, 72, 78], "node_definit": [63, 64], "edge_definit": 63, "geometri": 63, "nodedefinit": [63, 64, 65, 66], "truth_dict": 63, "custom_label_funct": 63, "loss_weight": [63, 70, 71, 72], "data_path": 63, "shape": [63, 66, 73, 80], "num_nod": 63, "github": [63, 80, 100], "com": [63, 80, 100], "team": [63, 98], "blob": [63, 80], "getting_start": 63, "md": 63, "your": [64, 98, 100], "nodesaspuls": [65, 66], "num_puls": 66, "overridden": 66, "set_number_of_input": 66, "measur": [66, 73], "cherenkov": 66, "radiat": 66, "train_dataload": 67, "val_dataload": 67, "max_epoch": 67, "gpu": [67, 68, 84, 100], "ckpt_path": 67, "log_every_n_step": 67, "gradient_clip_v": 67, "distribution_strategi": [67, 68], "trainer_kwarg": 67, "pytorch_lightn": [67, 95], "trainer": [67, 78, 81], "predict_as_datafram": [67, 68], "node_level": [67, 68, 81], "additional_attribut": [67, 68, 81], "save_state_dict": 67, "state_dict": 67, "load_state_dict": 67, "karg": 67, "trust": 67, "modelconfig": [67, 85, 88, 89], "enough": 67, "eval": [67, 100], "lambda": 67, "consequ": 67, "optimizer_class": 68, "optim": [68, 78], "adam": 68, "optimizer_kwarg": 68, "scheduler_class": 68, "scheduler_kwarg": 68, "scheduler_config": 68, "target_label": [68, 70, 71, 72], "target": [68, 70, 71, 72, 80, 91], "prediction_label": [68, 70, 71, 72], "configure_optim": 68, "shared_step": 68, "batch_idx": 68, "share": 68, "training_step": 68, "train_batch": 68, "validation_step": 68, "val_batch": 68, "compute_loss": [68, 70, 71, 72], "pred": [68, 72], "verbos": [68, 78], "activ": [68, 72, 98, 100], "mode": [68, 72], "deactiv": [68, 72], "multiclassclassificationtask": [69, 70], "binaryclassificationtask": [69, 70], "binaryclassificationtasklogit": [69, 70], "azimuthreconstructionwithkappa": [69, 71], "azimuthreconstruct": [69, 71], "directionreconstructionwithkappa": [69, 71], "zenithreconstruct": [69, 71], "zenithreconstructionwithkappa": [69, 71], "energyreconstruct": [69, 71], "energyreconstructionwithpow": [69, 71], "energyreconstructionwithuncertainti": [69, 71], "vertexreconstruct": [69, 71], "positionreconstruct": [69, 71], "timereconstruct": [69, 71], "inelasticityreconstruct": [69, 71], "identitytask": [69, 70, 72], "arg": [70, 72, 80, 84, 86, 91, 95], "classifi": 70, "untransform": 70, "logit": [70, 80], "affin": [70, 71, 72], "hidden_s": [70, 71, 72], "transform_prediction_and_target": [70, 71, 72], "transform_target": [70, 71, 72], "transform_infer": [70, 71, 72], "transform_support": [70, 71, 72], "binari": [70, 80], "feed": [70, 71, 72], "lossfunct": [70, 71, 72, 77, 80], "auto": [70, 71, 72], "matic": [70, 71, 72], "_pred": [70, 71, 72], "numer": [70, 71, 72], "stabl": [70, 71, 72], "log10": [70, 71, 72, 82], "rather": [70, 71, 72, 95], "conjunct": [70, 71, 72], "invers": [70, 71, 72], "recov": [70, 71, 72], "minimum": [70, 71, 72], "restrict": [70, 71, 72, 80], "invert": [70, 71, 72], "1e6": [70, 71, 72], "default_target_label": [70, 71, 72], "default_prediction_label": [70, 71, 72], "target_pr": 70, "angl": [71, 79], "kappa": [71, 80], "var": 71, "azimuth_pr": 71, "azimuth_kappa": 71, "3d": [71, 80], "vmf": 71, "dir_x_pr": 71, "dir_y_pr": 71, "dir_z_pr": 71, "direction_kappa": 71, "zenith_pr": 71, "zenith_kappa": 71, "energy_pr": 71, "uncertainti": 71, "energy_sigma": 71, "vertex": 71, "position_x_pr": 71, "position_y_pr": 71, "position_z_pr": 71, "interaction_time_pr": 71, "interact": 71, "hadron": 71, "inelasticity_pr": 71, "wrt": 72, "train_ev": 72, "xyzt": 73, "homophili": 73, "notic": [73, 80], "xyz_coord": 73, "pairwis": 73, "nb_dom": 73, "updat": [73, 75, 78], "config_updat": [74, 75], "weightfitt": [74, 75, 77, 82], "contourfitt": [74, 75], "read_entri": [74, 76], "plot_2d_contour": [74, 76], "plot_1d_contour": [74, 76], "contour": [75, 76], "config_path": 75, "new_config_path": 75, "dummy_sect": 75, "temp": 75, "dummi": 75, "section": 75, "header": 75, "configupdat": 75, "programat": 75, "statistical_fit": 75, "fit_weight": [75, 82], "config_outdir": 75, "weight_nam": [75, 82], "pisa_config_dict": 75, "add_to_databas": [75, 82], "flux": 75, "_database_path": 75, "statist": 75, "effect": [75, 78, 98], "account": 75, "systemat": 75, "hypersurfac": 75, "assumpt": 75, "regard": 75, "pipeline_path": 75, "post_fix": 75, "include_retro": 75, "fit_1d_contour": 75, "run_nam": 75, "config_dict": 75, "grid_siz": 75, "theta23_minmax": 75, "36": 75, "54": 75, "dm31_minmax": 75, "1d": [75, 76], "fit_2d_contour": 75, "2d": [75, 76, 80], "content": 76, "contour_data": 76, "xlim": 76, "ylim": 76, "0023799999999999997": 76, "0025499999999999997": 76, "chi2_critical_valu": 76, "width": 76, "height": 76, "path_to_pisa_fit_result": 76, "name_of_my_model_in_fit": 76, "legend": 76, "color": 76, "linestyl": 76, "style": [76, 98], "line": [76, 78, 84], "upper": 76, "axi": 76, "605": 76, "critic": [76, 95], "chi2": 76, "90": 76, "cl": 76, "right": [76, 80], "176": 76, "inch": 76, "388": 76, "706": 76, "abov": [76, 80, 82, 100], "352": 76, "piecewiselinearlr": [77, 78], "progressbar": [77, 78], "mseloss": [77, 80], "rmseloss": [77, 80], "logcoshloss": [77, 80], "crossentropyloss": [77, 80], "binarycrossentropyloss": [77, 80], "logcmk": [77, 80], "vonmisesfisherloss": [77, 80], "vonmisesfisher2dloss": [77, 80], "euclideandistanceloss": [77, 80], "vonmisesfisher3dloss": [77, 80], "make_dataload": [77, 81], "make_train_validation_dataload": [77, 81], "get_predict": [77, 81], "save_result": [77, 81], "uniform": [77, 82], "bjoernlow": [77, 82], "mileston": 78, "factor": 78, "last_epoch": 78, "_lrschedul": 78, "interpol": 78, "linearli": 78, "denot": 78, "multipli": 78, "closest": 78, "vice": 78, "versa": 78, "wrap": [78, 88, 89], "epoch": [78, 84], "print": [78, 95], "stdout": 78, "get_lr": 78, "refresh_r": 78, "process_posit": 78, "tqdmprogressbar": 78, "progress": 78, "bar": 78, "customis": 78, "lightn": 78, "init_validation_tqdm": 78, "overrid": 78, "init_predict_tqdm": 78, "init_test_tqdm": 78, "init_train_tqdm": 78, "get_metr": 78, "on_train_epoch_start": 78, "previou": 78, "behaviour": 78, "on_train_epoch_end": 78, "don": [78, 100], "duplciat": 78, "runtim": [79, 100], "azimuth_kei": 79, "zenith_kei": 79, "access": [79, 100], "azimiuth": 79, "return_el": 80, "elementwis": 80, "term": 80, "squar": 80, "root": [80, 100], "cosh": 80, "act": 80, "cross": 80, "entropi": 80, "num_class": 80, "softmax": 80, "ed": 80, "probabl": 80, "mit": 80, "licens": 80, "copyright": 80, "2019": 80, "ryabinin": 80, "permiss": 80, "herebi": 80, "person": 80, "copi": 80, "document": 80, "deal": 80, "modifi": 80, "publish": 80, "sublicens": 80, "sell": 80, "permit": 80, "whom": 80, "furnish": 80, "so": [80, 100], "subject": 80, "condit": 80, "shall": 80, "substanti": 80, "portion": 80, "THE": 80, "AS": 80, "warranti": 80, "OF": 80, "kind": 80, "OR": 80, "impli": 80, "BUT": 80, "TO": 80, "merchant": 80, "FOR": 80, "particular": [80, 98], "AND": 80, "noninfring": 80, "IN": 80, "NO": 80, "holder": 80, "BE": 80, "liabl": 80, "claim": 80, "damag": 80, "liabil": 80, "action": 80, "contract": 80, "tort": 80, "aris": 80, "WITH": 80, "_____________________": 80, "mryab": 80, "vmf_loss": 80, "master": 80, "py": [80, 100], "bessel": 80, "exponenti": 80, "ditto": 80, "iv": 80, "1812": 80, "04616": 80, "spite": 80, "suggest": 80, "sec": 80, "paper": 80, "m": 80, "correct": 80, "static": [80, 98], "ctx": 80, "backward": 80, "grad_output": 80, "von": 80, "mise": 80, "fisher": 80, "log_cmk_exact": 80, "c_": 80, "exactli": [80, 95], "log_cmk_approx": 80, "approx": 80, "minu": 80, "sign": 80, "log_cmk": 80, "kappa_switch": 80, "diverg": 80, "700": 80, "float64": 80, "precis": 80, "unaccur": 80, "switch": 80, "three": 80, "database_indic": 81, "test_siz": 81, "tag": [81, 98, 100], "archiv": 81, "public": 82, "uniformweightfitt": 82, "bin": 82, "privat": 82, "_fit_weight": 82, "sql": 82, "desir": [82, 93], "np": 82, "happen": 82, "x_low": 82, "wherea": 82, "curv": 82, "base_config": [83, 85], "dataset_config": [83, 85], "model_config": [83, 85, 86, 88, 91], "training_config": [83, 85], "argumentpars": [83, 84], "is_gcd_fil": [83, 93], "is_i3_fil": [83, 93], "has_extens": [83, 93], "find_i3_fil": [83, 93], "has_icecube_packag": [83, 94], "has_torch_packag": [83, 94], "has_pisa_packag": [83, 94], "requires_icecub": [83, 94], "repeatfilt": [83, 95], "eps_lik": [83, 96], "consist": [84, 95, 98], "cli": 84, "pop_default": 84, "usag": 84, "descript": 84, "command": [84, 100], "standard_argu": 84, "home": [84, 100], "runner": 84, "lib": [84, 100], "python3": 84, "training_example_data_sqlit": 84, "earli": 84, "patienc": 84, "narg": 84, "50": 84, "example_energy_reconstruction_model": 84, "num": 84, "fetch": 84, "with_standard_argu": 84, "overwritten": [84, 86], "baseconfig": [85, 86, 87, 88, 89, 91], "get_all_argument_valu": [85, 86], "save_dataset_config": [85, 88], "save_model_config": [85, 89], "traverse_and_appli": [85, 90], "list_all_submodul": [85, 90], "get_all_grapnet_class": [85, 90], "is_graphnet_modul": [85, 90], "is_graphnet_class": [85, 90], "get_graphnet_class": [85, 90], "trainingconfig": [85, 91], "basemodel": [86, 88, 89], "keyword": [86, 91], "validationerror": [86, 91], "pydantic_cor": [86, 91], "__init__": [86, 88, 89, 91, 100], "__pydantic_self__": [86, 91], "dump": [86, 88, 89], "yaml": [86, 87], "as_dict": [86, 88, 89], "classvar": [86, 88, 89, 91], "configdict": [86, 88, 89, 91], "conform": [86, 88, 89, 91], "pydant": [86, 88, 89, 91], "model_field": [86, 88, 89, 91], "fieldinfo": [86, 88, 89, 91], "metadata": [86, 88, 89, 91], "about": [86, 88, 89, 91], "__fields__": [86, 88, 89, 91], "v1": [86, 88, 89, 91, 100], "re": [87, 100], "save_config": 87, "dataconfig": 88, "transpar": [88, 89, 98], "reproduc": [88, 89], "In": [88, 89, 100], "session": [88, 89], "anoth": [88, 89], "you": [88, 89, 98, 100], "still": 88, "csv": 88, "train_select": 88, "test_select": 88, "unambigu": [88, 89], "annot": [88, 89, 91], "nonetyp": 88, "init_fn": [88, 89], "trainabl": 89, "hyperparamet": 89, "instanti": 89, "thu": 89, "fn_kwarg": 90, "structur": 90, "moduletyp": 90, "grapnet": 90, "lookup": 90, "early_stopping_pati": 91, "system": [93, 100], "filenam": 93, "dir": 93, "search": 93, "test_funct": 94, "filter": 95, "repeat": 95, "nb_repeats_allow": 95, "record": 95, "logrecord": 95, "clear": 95, "intuit": 95, "composit": 95, "loggeradapt": 95, "clash": 95, "setlevel": 95, "deleg": 95, "msg": 95, "warn": 95, "info": [95, 100], "debug": 95, "warning_onc": 95, "onc": 95, "handler": 95, "file_handl": 95, "filehandl": 95, "stream_handl": 95, "streamhandl": 95, "assort": 96, "ep": 96, "api": 97, "To": [98, 100], "sure": [98, 100], "smooth": 98, "guidelin": 98, "guid": 98, "encourag": 98, "contributor": 98, "discuss": 98, "bug": 98, "anyth": 98, "place": 98, "describ": 98, "yourself": 98, "ownership": 98, "prioriti": 98, "situat": 98, "lot": 98, "effort": 98, "go": 98, "turn": 98, "outsid": 98, "scope": 98, "better": 98, "fork": 98, "repo": 98, "dedic": 98, "branch": [98, 100], "repositori": 98, "graphbuil": 98, "builder": 98, "own": [98, 100], "accept": 98, "autom": 98, "review": 98, "pep8": 98, "docstr": 98, "googl": 98, "hint": 98, "adher": 98, "pep": 98, "pylint": 98, "flake8": 98, "black": 98, "well": 98, "recommend": [98, 100], "mypi": 98, "pydocstyl": 98, "docformatt": 98, "commit": 98, "hook": 98, "instal": 98, "come": 98, "pip": [98, 100], "Then": 98, "everytim": 98, "pep257": 98, "concept": 98, "ljvmiranda921": 98, "io": 98, "notebook": 98, "2018": 98, "06": 98, "21": 98, "precommit": 98, "environ": 100, "virtual": 100, "anaconda": 100, "prove": 100, "instruct": 100, "setup": 100, "want": 100, "part": 100, "achiev": 100, "bash": 100, "shell": 100, "cvmf": 100, "opensciencegrid": 100, "py3": 100, "v4": 100, "sh": 100, "ubuntu_20": 100, "04_x86_64": 100, "metaproject": 100, "env": 100, "alia": 100, "script": 100, "With": 100, "now": 100, "light": 100, "extra": 100, "geometr": 100, "won": 100, "later": 100, "torch_cpu": 100, "txt": 100, "cpu": 100, "torch_gpu": 100, "prefer": 100, "unix": 100, "git": 100, "clone": 100, "usernam": 100, "cd": 100, "conda": 100, "gcc_linux": 100, "64": 100, "gxx_linux": 100, "libgcc": 100, "cudatoolkit": 100, "11": 100, "forg": 100, "torch_maco": 100, "On": 100, "maco": 100, "box": 100, "compil": 100, "gcc": 100, "date": 100, "possibli": 100, "cuda": 100, "toolkit": 100, "recent": 100, "omit": 100, "newer": 100, "export": 100, "ld_library_path": 100, "anaconda3": 100, "miniconda3": 100, "bashrc": 100, "librari": 100, "rm": 100, "asogaard": 100, "latest": 100, "dc423315742c": 100, "01_icetrai": 100, "01_convert_i3_fil": 100, "2023": 100, "01": 100, "24": 100, "41": 100, "27": 100, "graphnet_20230124": 100, "134127": 100, "46": 100, "convert_i3_fil": 100, "ic86": 100, "thread": 100, "00": 100, "79": 100, "42": 100, "26": 100, "413": 100, "88it": 100, "specialis": 100, "ones": 100, "push": 100, "vx": 100}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [41, 0, 0, "-", "deployment"], [45, 0, 0, "-", "models"], [74, 0, 0, "-", "pisa"], [77, 0, 0, "-", "training"], [83, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [6, 0, 0, "-", "dataloader"], [7, 0, 0, "-", "dataset"], [14, 0, 0, "-", "extractors"], [31, 0, 0, "-", "parquet"], [33, 0, 0, "-", "pipeline"], [34, 0, 0, "-", "sqlite"], [37, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[6, 1, 1, "", "DataLoader"], [6, 5, 1, "", "collate_fn"], [6, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[6, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[8, 0, 0, "-", "dataset"], [9, 0, 0, "-", "parquet"], [11, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[8, 6, 1, "", "ColumnMissingException"], [8, 1, 1, "", "Dataset"], [8, 1, 1, "", "EnsembleDataset"], [8, 5, 1, "", "load_module"], [8, 5, 1, "", "parse_graph_definition"]], "graphnet.data.dataset.dataset.Dataset": [[8, 3, 1, "", "add_label"], [8, 3, 1, "", "concatenate"], [8, 3, 1, "", "from_config"], [8, 4, 1, "", "path"], [8, 3, 1, "", "query_table"], [8, 4, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[10, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[10, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[10, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[12, 0, 0, "-", "sqlite_dataset"], [13, 0, 0, "-", "sqlite_dataset_perturbed"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[12, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite.sqlite_dataset_perturbed": [[13, 1, 1, "", "SQLiteDatasetPerturbed"]], "graphnet.data.extractors": [[15, 0, 0, "-", "i3extractor"], [16, 0, 0, "-", "i3featureextractor"], [17, 0, 0, "-", "i3genericextractor"], [18, 0, 0, "-", "i3hybridrecoextractor"], [19, 0, 0, "-", "i3ntmuonlabelsextractor"], [20, 0, 0, "-", "i3particleextractor"], [21, 0, 0, "-", "i3pisaextractor"], [22, 0, 0, "-", "i3quesoextractor"], [23, 0, 0, "-", "i3retroextractor"], [24, 0, 0, "-", "i3splinempeextractor"], [25, 0, 0, "-", "i3truthextractor"], [26, 0, 0, "-", "i3tumextractor"], [27, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[15, 1, 1, "", "I3Extractor"], [15, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[15, 4, 1, "", "name"], [15, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[15, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[16, 1, 1, "", "I3FeatureExtractor"], [16, 1, 1, "", "I3FeatureExtractorIceCube86"], [16, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [16, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [16, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[17, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[18, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[19, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3particleextractor": [[20, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[21, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[22, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.i3retroextractor": [[23, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[24, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[25, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[26, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[28, 0, 0, "-", "collections"], [29, 0, 0, "-", "frames"], [30, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[28, 5, 1, "", "flatten_nested_dictionary"], [28, 5, 1, "", "serialise"], [28, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[29, 5, 1, "", "frame_is_montecarlo"], [29, 5, 1, "", "frame_is_noise"], [29, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[30, 5, 1, "", "break_cyclic_recursion"], [30, 5, 1, "", "cast_object_to_pure_python"], [30, 5, 1, "", "cast_pulse_series_to_pure_python"], [30, 5, 1, "", "get_member_variables"], [30, 5, 1, "", "is_boost_class"], [30, 5, 1, "", "is_boost_enum"], [30, 5, 1, "", "is_icecube_class"], [30, 5, 1, "", "is_method"], [30, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[32, 0, 0, "-", "parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataconverter": [[32, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[32, 2, 1, "", "file_suffix"], [32, 3, 1, "", "merge_files"], [32, 3, 1, "", "save_data"]], "graphnet.data.pipeline": [[33, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.sqlite": [[35, 0, 0, "-", "sqlite_dataconverter"], [36, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[35, 1, 1, "", "SQLiteDataConverter"], [35, 5, 1, "", "construct_dataframe"], [35, 5, 1, "", "is_mc_tree"], [35, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[35, 3, 1, "", "any_pulsemap_is_non_empty"], [35, 2, 1, "", "file_suffix"], [35, 3, 1, "", "merge_files"], [35, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_utilities": [[36, 5, 1, "", "attach_index"], [36, 5, 1, "", "create_table"], [36, 5, 1, "", "create_table_and_save_to_sql"], [36, 5, 1, "", "database_exists"], [36, 5, 1, "", "database_table_exists"], [36, 5, 1, "", "run_sql_code"], [36, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[38, 0, 0, "-", "parquet_to_sqlite"], [39, 0, 0, "-", "random"], [40, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[38, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[38, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[39, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[40, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[40, 3, 1, "", "resolve"]], "graphnet.deployment.i3modules": [[44, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[44, 1, 1, "", "GraphNeTI3Module"], [44, 1, 1, "", "I3InferenceModule"], [44, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.models": [[46, 0, 0, "-", "coarsening"], [47, 0, 0, "-", "components"], [50, 0, 0, "-", "detector"], [54, 0, 0, "-", "gnn"], [60, 0, 0, "-", "graphs"], [67, 0, 0, "-", "model"], [68, 0, 0, "-", "standard_model"], [69, 0, 0, "-", "task"], [73, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[46, 1, 1, "", "AttributeCoarsening"], [46, 1, 1, "", "Coarsening"], [46, 1, 1, "", "CustomDOMCoarsening"], [46, 1, 1, "", "DOMAndTimeWindowCoarsening"], [46, 1, 1, "", "DOMCoarsening"], [46, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[46, 3, 1, "", "forward"], [46, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[48, 0, 0, "-", "layers"], [49, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[48, 1, 1, "", "DynEdgeConv"], [48, 1, 1, "", "DynTrans"], [48, 1, 1, "", "EdgeConvTito"]], "graphnet.models.components.layers.DynEdgeConv": [[48, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[48, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[48, 3, 1, "", "forward"], [48, 3, 1, "", "message"], [48, 3, 1, "", "reset_parameters"]], "graphnet.models.components.pool": [[49, 5, 1, "", "group_by"], [49, 5, 1, "", "group_pulses_to_dom"], [49, 5, 1, "", "group_pulses_to_pmt"], [49, 5, 1, "", "min_pool"], [49, 5, 1, "", "min_pool_x"], [49, 5, 1, "", "std_pool"], [49, 5, 1, "", "std_pool_x"], [49, 5, 1, "", "sum_pool"], [49, 5, 1, "", "sum_pool_and_distribute"], [49, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[51, 0, 0, "-", "detector"], [52, 0, 0, "-", "icecube"], [53, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[51, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[51, 3, 1, "", "feature_map"], [51, 3, 1, "", "forward"]], "graphnet.models.detector.icecube": [[52, 1, 1, "", "IceCube86"], [52, 1, 1, "", "IceCubeDeepCore"], [52, 1, 1, "", "IceCubeKaggle"], [52, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[52, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[52, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[52, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[52, 3, 1, "", "feature_map"]], "graphnet.models.detector.prometheus": [[53, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.Prometheus": [[53, 3, 1, "", "feature_map"]], "graphnet.models.gnn": [[55, 0, 0, "-", "convnet"], [56, 0, 0, "-", "dynedge"], [57, 0, 0, "-", "dynedge_jinst"], [58, 0, 0, "-", "dynedge_kaggle_tito"], [59, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[55, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[55, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[56, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[56, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[57, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[57, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[58, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[58, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[59, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[59, 3, 1, "", "forward"], [59, 4, 1, "", "nb_inputs"], [59, 4, 1, "", "nb_outputs"]], "graphnet.models.graphs": [[61, 0, 0, "-", "edges"], [63, 0, 0, "-", "graph_definition"], [64, 0, 0, "-", "graphs"], [65, 0, 0, "-", "nodes"]], "graphnet.models.graphs.edges": [[62, 0, 0, "-", "edges"]], "graphnet.models.graphs.edges.edges": [[62, 1, 1, "", "EdgeDefinition"], [62, 1, 1, "", "EuclideanEdges"], [62, 1, 1, "", "KNNEdges"], [62, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[62, 3, 1, "", "forward"]], "graphnet.models.graphs.graph_definition": [[63, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[63, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[64, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[66, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[66, 1, 1, "", "NodeDefinition"], [66, 1, 1, "", "NodesAsPulses"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[66, 3, 1, "", "forward"], [66, 4, 1, "", "nb_outputs"], [66, 3, 1, "", "set_number_of_inputs"]], "graphnet.models.model": [[67, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[67, 3, 1, "", "fit"], [67, 3, 1, "", "forward"], [67, 3, 1, "", "from_config"], [67, 3, 1, "", "load"], [67, 3, 1, "", "load_state_dict"], [67, 3, 1, "", "predict"], [67, 3, 1, "", "predict_as_dataframe"], [67, 3, 1, "", "save"], [67, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[68, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[68, 3, 1, "", "compute_loss"], [68, 3, 1, "", "configure_optimizers"], [68, 3, 1, "", "forward"], [68, 3, 1, "", "inference"], [68, 3, 1, "", "predict"], [68, 3, 1, "", "predict_as_dataframe"], [68, 4, 1, "", "prediction_labels"], [68, 3, 1, "", "shared_step"], [68, 4, 1, "", "target_labels"], [68, 3, 1, "", "train"], [68, 3, 1, "", "training_step"], [68, 3, 1, "", "validation_step"]], "graphnet.models.task": [[70, 0, 0, "-", "classification"], [71, 0, 0, "-", "reconstruction"], [72, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[70, 1, 1, "", "BinaryClassificationTask"], [70, 1, 1, "", "BinaryClassificationTaskLogits"], [70, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[70, 2, 1, "", "default_prediction_labels"], [70, 2, 1, "", "default_target_labels"], [70, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[70, 2, 1, "", "default_prediction_labels"], [70, 2, 1, "", "default_target_labels"], [70, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[71, 1, 1, "", "AzimuthReconstruction"], [71, 1, 1, "", "AzimuthReconstructionWithKappa"], [71, 1, 1, "", "DirectionReconstructionWithKappa"], [71, 1, 1, "", "EnergyReconstruction"], [71, 1, 1, "", "EnergyReconstructionWithPower"], [71, 1, 1, "", "EnergyReconstructionWithUncertainty"], [71, 1, 1, "", "InelasticityReconstruction"], [71, 1, 1, "", "PositionReconstruction"], [71, 1, 1, "", "TimeReconstruction"], [71, 1, 1, "", "VertexReconstruction"], [71, 1, 1, "", "ZenithReconstruction"], [71, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[72, 1, 1, "", "IdentityTask"], [72, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[72, 4, 1, "", "default_prediction_labels"], [72, 4, 1, "", "default_target_labels"], [72, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[72, 3, 1, "", "compute_loss"], [72, 4, 1, "", "default_prediction_labels"], [72, 4, 1, "", "default_target_labels"], [72, 3, 1, "", "forward"], [72, 3, 1, "", "inference"], [72, 4, 1, "", "nb_inputs"], [72, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[73, 5, 1, "", "calculate_distance_matrix"], [73, 5, 1, "", "calculate_xyzt_homophily"], [73, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[75, 0, 0, "-", "fitting"], [76, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[75, 1, 1, "", "ContourFitter"], [75, 1, 1, "", "WeightFitter"], [75, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[75, 3, 1, "", "fit_1d_contour"], [75, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[75, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[76, 5, 1, "", "plot_1D_contour"], [76, 5, 1, "", "plot_2D_contour"], [76, 5, 1, "", "read_entry"]], "graphnet.training": [[78, 0, 0, "-", "callbacks"], [79, 0, 0, "-", "labels"], [80, 0, 0, "-", "loss_functions"], [81, 0, 0, "-", "utils"], [82, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[78, 1, 1, "", "PiecewiseLinearLR"], [78, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[78, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[78, 3, 1, "", "get_metrics"], [78, 3, 1, "", "init_predict_tqdm"], [78, 3, 1, "", "init_test_tqdm"], [78, 3, 1, "", "init_train_tqdm"], [78, 3, 1, "", "init_validation_tqdm"], [78, 3, 1, "", "on_train_epoch_end"], [78, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[79, 1, 1, "", "Direction"], [79, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[79, 4, 1, "", "key"]], "graphnet.training.loss_functions": [[80, 1, 1, "", "BinaryCrossEntropyLoss"], [80, 1, 1, "", "CrossEntropyLoss"], [80, 1, 1, "", "EuclideanDistanceLoss"], [80, 1, 1, "", "LogCMK"], [80, 1, 1, "", "LogCoshLoss"], [80, 1, 1, "", "LossFunction"], [80, 1, 1, "", "MSELoss"], [80, 1, 1, "", "RMSELoss"], [80, 1, 1, "", "VonMisesFisher2DLoss"], [80, 1, 1, "", "VonMisesFisher3DLoss"], [80, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[80, 3, 1, "", "backward"], [80, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[80, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[80, 3, 1, "", "log_cmk"], [80, 3, 1, "", "log_cmk_approx"], [80, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[81, 5, 1, "", "collate_fn"], [81, 5, 1, "", "get_predictions"], [81, 5, 1, "", "make_dataloader"], [81, 5, 1, "", "make_train_validation_dataloader"], [81, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[82, 1, 1, "", "BjoernLow"], [82, 1, 1, "", "Uniform"], [82, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[82, 3, 1, "", "fit"]], "graphnet.utilities": [[84, 0, 0, "-", "argparse"], [85, 0, 0, "-", "config"], [92, 0, 0, "-", "decorators"], [93, 0, 0, "-", "filesys"], [94, 0, 0, "-", "imports"], [95, 0, 0, "-", "logging"], [96, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[84, 1, 1, "", "ArgumentParser"], [84, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[84, 2, 1, "", "standard_arguments"], [84, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[84, 3, 1, "", "contains"], [84, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[86, 0, 0, "-", "base_config"], [87, 0, 0, "-", "configurable"], [88, 0, 0, "-", "dataset_config"], [89, 0, 0, "-", "model_config"], [90, 0, 0, "-", "parsing"], [91, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[86, 1, 1, "", "BaseConfig"], [86, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[86, 3, 1, "", "as_dict"], [86, 3, 1, "", "dump"], [86, 3, 1, "", "load"], [86, 2, 1, "", "model_config"], [86, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[87, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[87, 4, 1, "", "config"], [87, 3, 1, "", "from_config"], [87, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[88, 1, 1, "", "DatasetConfig"], [88, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[88, 3, 1, "", "as_dict"], [88, 2, 1, "", "features"], [88, 2, 1, "", "graph_definition"], [88, 2, 1, "", "index_column"], [88, 2, 1, "", "loss_weight_column"], [88, 2, 1, "", "loss_weight_default_value"], [88, 2, 1, "", "loss_weight_table"], [88, 2, 1, "", "model_config"], [88, 2, 1, "", "model_fields"], [88, 2, 1, "", "node_truth"], [88, 2, 1, "", "node_truth_table"], [88, 2, 1, "", "path"], [88, 2, 1, "", "pulsemaps"], [88, 2, 1, "", "seed"], [88, 2, 1, "", "selection"], [88, 2, 1, "", "string_selection"], [88, 2, 1, "", "truth"], [88, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[89, 1, 1, "", "ModelConfig"], [89, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[89, 2, 1, "", "arguments"], [89, 3, 1, "", "as_dict"], [89, 2, 1, "", "class_name"], [89, 2, 1, "", "model_config"], [89, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[90, 5, 1, "", "get_all_grapnet_classes"], [90, 5, 1, "", "get_graphnet_classes"], [90, 5, 1, "", "is_graphnet_class"], [90, 5, 1, "", "is_graphnet_module"], [90, 5, 1, "", "list_all_submodules"], [90, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[91, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[91, 2, 1, "", "dataloader"], [91, 2, 1, "", "early_stopping_patience"], [91, 2, 1, "", "fit"], [91, 2, 1, "", "model_config"], [91, 2, 1, "", "model_fields"], [91, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[93, 5, 1, "", "find_i3_files"], [93, 5, 1, "", "has_extension"], [93, 5, 1, "", "is_gcd_file"], [93, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[94, 5, 1, "", "has_icecube_package"], [94, 5, 1, "", "has_pisa_package"], [94, 5, 1, "", "has_torch_package"], [94, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[95, 1, 1, "", "Logger"], [95, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[95, 3, 1, "", "critical"], [95, 3, 1, "", "debug"], [95, 3, 1, "", "error"], [95, 4, 1, "", "file_handlers"], [95, 4, 1, "", "handlers"], [95, 3, 1, "", "info"], [95, 3, 1, "", "setLevel"], [95, 4, 1, "", "stream_handlers"], [95, 3, 1, "", "warning"], [95, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[95, 3, 1, "", "filter"], [95, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[96, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 99], "impact": [0, 99], "usag": [0, 99], "acknowledg": [0, 99], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": [7, 8], "parquet": [9, 31], "parquet_dataset": 10, "sqlite": [11, 34], "sqlite_dataset": 12, "sqlite_dataset_perturb": 13, "extractor": 14, "i3extractor": 15, "i3featureextractor": 16, "i3genericextractor": 17, "i3hybridrecoextractor": 18, "i3ntmuonlabelsextractor": 19, "i3particleextractor": 20, "i3pisaextractor": 21, "i3quesoextractor": 22, "i3retroextractor": 23, "i3splinempeextractor": 24, "i3truthextractor": 25, "i3tumextractor": 26, "util": [27, 37, 73, 81, 83], "collect": 28, "frame": 29, "type": 30, "parquet_dataconvert": 32, "pipelin": 33, "sqlite_dataconvert": 35, "sqlite_util": 36, "parquet_to_sqlit": 38, "random": 39, "string_selection_resolv": 40, "deploy": [41, 43], "i3modul": 42, "graphnet_modul": 44, "model": [45, 67], "coarsen": 46, "compon": 47, "layer": 48, "pool": 49, "detector": [50, 51], "icecub": 52, "prometheu": 53, "gnn": [54, 59], "convnet": 55, "dynedg": 56, "dynedge_jinst": 57, "dynedge_kaggle_tito": 58, "graph": [60, 64], "edg": [61, 62], "graph_definit": 63, "node": [65, 66], "standard_model": 68, "task": [69, 72], "classif": 70, "reconstruct": 71, "pisa": 74, "fit": 75, "plot": 76, "train": 77, "callback": 78, "label": 79, "loss_funct": 80, "weight_fit": 82, "argpars": 84, "config": 85, "base_config": 86, "configur": 87, "dataset_config": 88, "model_config": 89, "pars": 90, "training_config": 91, "decor": 92, "filesi": 93, "import": 94, "log": 95, "math": 96, "src": 97, "contribut": 98, "github": 98, "issu": 98, "pull": 98, "request": 98, "convent": 98, "code": 98, "qualiti": 98, "instal": 100, "icetrai": 100, "stand": 100, "alon": 100, "run": 100, "docker": 100}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"About": [[0, "about"], [99, "about"]], "Impact": [[0, "impact"], [99, "impact"]], "Usage": [[0, "usage"], [99, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [99, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "module-graphnet.data.dataloader"]], "dataset": [[7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.dataset.dataset"]], "parquet": [[9, "module-graphnet.data.dataset.parquet"], [31, "module-graphnet.data.parquet"]], "parquet_dataset": [[10, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[11, "module-graphnet.data.dataset.sqlite"], [34, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[12, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "sqlite_dataset_perturbed": [[13, "module-graphnet.data.dataset.sqlite.sqlite_dataset_perturbed"]], "extractors": [[14, "module-graphnet.data.extractors"]], "i3extractor": [[15, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[16, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[17, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[18, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[19, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor": [[20, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor": [[21, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor": [[22, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor": [[23, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[24, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[25, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[26, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[27, "module-graphnet.data.extractors.utilities"], [37, "module-graphnet.data.utilities"], [83, "module-graphnet.utilities"]], "collections": [[28, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[29, "module-graphnet.data.extractors.utilities.frames"]], "types": [[30, "module-graphnet.data.extractors.utilities.types"]], "parquet_dataconverter": [[32, "module-graphnet.data.parquet.parquet_dataconverter"]], "pipeline": [[33, "module-graphnet.data.pipeline"]], "sqlite_dataconverter": [[35, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_utilities": [[36, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[38, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[39, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[40, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[41, "module-graphnet.deployment"]], "i3modules": [[42, "i3modules"]], "deployer": [[43, "deployer"]], "graphnet_module": [[44, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[45, "module-graphnet.models"]], "coarsening": [[46, "module-graphnet.models.coarsening"]], "components": [[47, "module-graphnet.models.components"]], "layers": [[48, "module-graphnet.models.components.layers"]], "pool": [[49, "module-graphnet.models.components.pool"]], "detector": [[50, "module-graphnet.models.detector"], [51, "module-graphnet.models.detector.detector"]], "icecube": [[52, "module-graphnet.models.detector.icecube"]], "prometheus": [[53, "module-graphnet.models.detector.prometheus"]], "gnn": [[54, "module-graphnet.models.gnn"], [59, "module-graphnet.models.gnn.gnn"]], "convnet": [[55, "module-graphnet.models.gnn.convnet"]], "dynedge": [[56, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[57, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[58, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "graphs": [[60, "module-graphnet.models.graphs"], [64, "module-graphnet.models.graphs.graphs"]], "edges": [[61, "module-graphnet.models.graphs.edges"], [62, "module-graphnet.models.graphs.edges.edges"]], "graph_definition": [[63, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[65, "module-graphnet.models.graphs.nodes"], [66, "module-graphnet.models.graphs.nodes.nodes"]], "model": [[67, "module-graphnet.models.model"]], "standard_model": [[68, "module-graphnet.models.standard_model"]], "task": [[69, "module-graphnet.models.task"], [72, "module-graphnet.models.task.task"]], "classification": [[70, "module-graphnet.models.task.classification"]], "reconstruction": [[71, "module-graphnet.models.task.reconstruction"]], "utils": [[73, "module-graphnet.models.utils"], [81, "module-graphnet.training.utils"]], "pisa": [[74, "module-graphnet.pisa"]], "fitting": [[75, "module-graphnet.pisa.fitting"]], "plotting": [[76, "module-graphnet.pisa.plotting"]], "training": [[77, "module-graphnet.training"]], "callbacks": [[78, "module-graphnet.training.callbacks"]], "labels": [[79, "module-graphnet.training.labels"]], "loss_functions": [[80, "module-graphnet.training.loss_functions"]], "weight_fitting": [[82, "module-graphnet.training.weight_fitting"]], "argparse": [[84, "module-graphnet.utilities.argparse"]], "config": [[85, "module-graphnet.utilities.config"]], "base_config": [[86, "module-graphnet.utilities.config.base_config"]], "configurable": [[87, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[88, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[89, "module-graphnet.utilities.config.model_config"]], "parsing": [[90, "module-graphnet.utilities.config.parsing"]], "training_config": [[91, "module-graphnet.utilities.config.training_config"]], "decorators": [[92, "module-graphnet.utilities.decorators"]], "filesys": [[93, "module-graphnet.utilities.filesys"]], "imports": [[94, "module-graphnet.utilities.imports"]], "logging": [[95, "module-graphnet.utilities.logging"]], "maths": [[96, "module-graphnet.utilities.maths"]], "src": [[97, "src"]], "Contribute": [[98, "contribute"]], "GitHub issues": [[98, "github-issues"]], "Pull requests": [[98, "pull-requests"]], "Conventions": [[98, "conventions"]], "Code quality": [[98, "code-quality"]], "Install": [[100, "install"]], "Installing with IceTray": [[100, "installing-with-icetray"]], "Installing stand-alone": [[100, "installing-stand-alone"]], "Running in Docker": [[100, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [6, "module-graphnet.data.dataloader"], [7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.dataset.dataset"], [9, "module-graphnet.data.dataset.parquet"], [10, "module-graphnet.data.dataset.parquet.parquet_dataset"], [11, "module-graphnet.data.dataset.sqlite"], [12, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [13, "module-graphnet.data.dataset.sqlite.sqlite_dataset_perturbed"], [14, "module-graphnet.data.extractors"], [15, "module-graphnet.data.extractors.i3extractor"], [16, "module-graphnet.data.extractors.i3featureextractor"], [17, "module-graphnet.data.extractors.i3genericextractor"], [18, "module-graphnet.data.extractors.i3hybridrecoextractor"], [19, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"], [20, "module-graphnet.data.extractors.i3particleextractor"], [21, "module-graphnet.data.extractors.i3pisaextractor"], [22, "module-graphnet.data.extractors.i3quesoextractor"], [23, "module-graphnet.data.extractors.i3retroextractor"], [24, "module-graphnet.data.extractors.i3splinempeextractor"], [25, "module-graphnet.data.extractors.i3truthextractor"], [26, "module-graphnet.data.extractors.i3tumextractor"], [27, "module-graphnet.data.extractors.utilities"], [28, "module-graphnet.data.extractors.utilities.collections"], [29, "module-graphnet.data.extractors.utilities.frames"], [30, "module-graphnet.data.extractors.utilities.types"], [31, "module-graphnet.data.parquet"], [32, "module-graphnet.data.parquet.parquet_dataconverter"], [33, "module-graphnet.data.pipeline"], [34, "module-graphnet.data.sqlite"], [35, "module-graphnet.data.sqlite.sqlite_dataconverter"], [36, "module-graphnet.data.sqlite.sqlite_utilities"], [37, "module-graphnet.data.utilities"], [38, "module-graphnet.data.utilities.parquet_to_sqlite"], [39, "module-graphnet.data.utilities.random"], [40, "module-graphnet.data.utilities.string_selection_resolver"], [41, "module-graphnet.deployment"], [44, "module-graphnet.deployment.i3modules.graphnet_module"], [45, "module-graphnet.models"], [46, "module-graphnet.models.coarsening"], [47, "module-graphnet.models.components"], [48, "module-graphnet.models.components.layers"], [49, "module-graphnet.models.components.pool"], [50, "module-graphnet.models.detector"], [51, "module-graphnet.models.detector.detector"], [52, "module-graphnet.models.detector.icecube"], [53, "module-graphnet.models.detector.prometheus"], [54, "module-graphnet.models.gnn"], [55, "module-graphnet.models.gnn.convnet"], [56, "module-graphnet.models.gnn.dynedge"], [57, "module-graphnet.models.gnn.dynedge_jinst"], [58, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [59, "module-graphnet.models.gnn.gnn"], [60, "module-graphnet.models.graphs"], [61, "module-graphnet.models.graphs.edges"], [62, "module-graphnet.models.graphs.edges.edges"], [63, "module-graphnet.models.graphs.graph_definition"], [64, "module-graphnet.models.graphs.graphs"], [65, "module-graphnet.models.graphs.nodes"], [66, "module-graphnet.models.graphs.nodes.nodes"], [67, "module-graphnet.models.model"], [68, "module-graphnet.models.standard_model"], [69, "module-graphnet.models.task"], [70, "module-graphnet.models.task.classification"], [71, "module-graphnet.models.task.reconstruction"], [72, "module-graphnet.models.task.task"], [73, "module-graphnet.models.utils"], [74, "module-graphnet.pisa"], [75, "module-graphnet.pisa.fitting"], [76, "module-graphnet.pisa.plotting"], [77, "module-graphnet.training"], [78, "module-graphnet.training.callbacks"], [79, "module-graphnet.training.labels"], [80, "module-graphnet.training.loss_functions"], [81, "module-graphnet.training.utils"], [82, "module-graphnet.training.weight_fitting"], [83, "module-graphnet.utilities"], [84, "module-graphnet.utilities.argparse"], [85, "module-graphnet.utilities.config"], [86, "module-graphnet.utilities.config.base_config"], [87, "module-graphnet.utilities.config.configurable"], [88, "module-graphnet.utilities.config.dataset_config"], [89, "module-graphnet.utilities.config.model_config"], [90, "module-graphnet.utilities.config.parsing"], [91, "module-graphnet.utilities.config.training_config"], [92, "module-graphnet.utilities.decorators"], [93, "module-graphnet.utilities.filesys"], [94, "module-graphnet.utilities.imports"], [95, "module-graphnet.utilities.logging"], [96, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "dataloader (class in graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[6, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[6, "module-graphnet.data.dataloader"]], "graphnet.data.dataset": [[7, "module-graphnet.data.dataset"]], "columnmissingexception": [[8, "graphnet.data.dataset.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset.dataset)": [[8, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[8, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[8, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[8, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[8, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[8, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[8, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[8, "graphnet.data.dataset.dataset.parse_graph_definition"]], "path (graphnet.data.dataset.dataset.dataset property)": [[8, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[8, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[8, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[9, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[10, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[10, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[10, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[11, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[12, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[12, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[12, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "sqlitedatasetperturbed (class in graphnet.data.dataset.sqlite.sqlite_dataset_perturbed)": [[13, "graphnet.data.dataset.sqlite.sqlite_dataset_perturbed.SQLiteDatasetPerturbed"]], "graphnet.data.dataset.sqlite.sqlite_dataset_perturbed": [[13, "module-graphnet.data.dataset.sqlite.sqlite_dataset_perturbed"]], "graphnet.data.extractors": [[14, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[15, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[15, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[15, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[15, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[15, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[15, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[16, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[17, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[17, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[18, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[18, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.i3ntmuonlabelsextractor)": [[19, "graphnet.data.extractors.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[19, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.i3particleextractor)": [[20, "graphnet.data.extractors.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.i3particleextractor": [[20, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[21, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[21, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.i3quesoextractor)": [[22, "graphnet.data.extractors.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[22, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[23, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[23, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[24, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[24, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[25, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[25, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[26, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[26, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[27, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[28, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[28, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[28, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[28, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[29, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[29, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[29, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[29, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[30, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_type"]], "graphnet.data.parquet": [[31, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[32, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[33, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[33, "module-graphnet.data.pipeline"]], "graphnet.data.sqlite": [[34, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[35, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[36, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[37, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[38, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[38, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[38, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[39, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[39, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[40, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[40, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[40, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[41, "module-graphnet.deployment"]], "graphneti3module (class in graphnet.deployment.i3modules.graphnet_module)": [[44, "graphnet.deployment.i3modules.graphnet_module.GraphNeTI3Module"]], "i3inferencemodule (class in graphnet.deployment.i3modules.graphnet_module)": [[44, "graphnet.deployment.i3modules.graphnet_module.I3InferenceModule"]], "i3pulsecleanermodule (class in graphnet.deployment.i3modules.graphnet_module)": [[44, "graphnet.deployment.i3modules.graphnet_module.I3PulseCleanerModule"]], "graphnet.deployment.i3modules.graphnet_module": [[44, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[45, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[46, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[46, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[46, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[47, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[48, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[48, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[48, "graphnet.models.components.layers.EdgeConvTito"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[48, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[48, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[48, "graphnet.models.components.layers.EdgeConvTito.forward"]], "graphnet.models.components.layers": [[48, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[48, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[48, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[49, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[50, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[51, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[51, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[51, "graphnet.models.detector.detector.Detector.forward"]], "graphnet.models.detector.detector": [[51, "module-graphnet.models.detector.detector"]], "icecube86 (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[52, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[52, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[52, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "graphnet.models.detector.icecube": [[52, "module-graphnet.models.detector.icecube"]], "prometheus (class in graphnet.models.detector.prometheus)": [[53, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.prometheus method)": [[53, "graphnet.models.detector.prometheus.Prometheus.feature_map"]], "graphnet.models.detector.prometheus": [[53, "module-graphnet.models.detector.prometheus"]], "graphnet.models.gnn": [[54, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[55, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[55, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[55, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[56, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[56, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[56, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[57, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[57, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[57, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[58, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[58, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[58, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[59, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[59, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[59, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[59, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[59, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "graphnet.models.graphs": [[60, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[61, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[62, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[62, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[62, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[62, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[62, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[62, "module-graphnet.models.graphs.edges.edges"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[63, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[63, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[63, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[64, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[64, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[65, "module-graphnet.models.graphs.nodes"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[66, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[66, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "model (class in graphnet.models.model)": [[67, "graphnet.models.model.Model"]], "fit() (graphnet.models.model.model method)": [[67, "graphnet.models.model.Model.fit"]], "forward() (graphnet.models.model.model method)": [[67, "graphnet.models.model.Model.forward"]], "from_config() (graphnet.models.model.model class method)": [[67, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[67, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[67, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[67, "graphnet.models.model.Model.load_state_dict"]], "predict() (graphnet.models.model.model method)": [[67, "graphnet.models.model.Model.predict"]], "predict_as_dataframe() (graphnet.models.model.model method)": [[67, "graphnet.models.model.Model.predict_as_dataframe"]], "save() (graphnet.models.model.model method)": [[67, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[67, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[68, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[68, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[68, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[68, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[68, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[69, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[70, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[70, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[70, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[70, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[70, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[70, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[70, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[70, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[70, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[70, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[71, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[71, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[71, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[71, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[71, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[71, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[71, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[71, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[72, "graphnet.models.task.task.IdentityTask"]], "task (class in graphnet.models.task.task)": [[72, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.task method)": [[72, "graphnet.models.task.task.Task.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[72, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[72, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[72, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[72, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.task method)": [[72, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task.task": [[72, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[72, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[72, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[72, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[72, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[73, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[73, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[73, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[73, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[74, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[75, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[75, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[75, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[75, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[75, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[75, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[75, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[76, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[76, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[76, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[76, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[77, "module-graphnet.training"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[78, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[78, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[78, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[78, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[78, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[78, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[78, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[78, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[78, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[78, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[78, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "direction (class in graphnet.training.labels)": [[79, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[79, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[79, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[79, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[80, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[80, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[80, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[80, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[80, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[80, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[80, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[80, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[81, "graphnet.training.utils.collate_fn"]], "get_predictions() (in module graphnet.training.utils)": [[81, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[81, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[81, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[81, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[81, "graphnet.training.utils.save_results"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[82, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[82, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[82, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[82, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[82, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[83, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[84, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[84, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[84, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[84, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[84, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[84, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[84, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[85, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[86, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[86, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[86, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[86, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[86, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[86, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[86, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[86, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[87, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[87, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[87, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[87, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[87, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[88, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[88, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[88, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[89, "graphnet.utilities.config.model_config.ModelConfig"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[89, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[89, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[89, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[89, "module-graphnet.utilities.config.model_config"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[89, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[89, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[89, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[90, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[90, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[90, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[90, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[90, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[90, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[90, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[91, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[91, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[91, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[91, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[91, "module-graphnet.utilities.config.training_config"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[91, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[91, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[91, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[92, "module-graphnet.utilities.decorators"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[93, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[93, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[93, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[93, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[93, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[94, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[94, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[94, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[94, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[94, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[95, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[95, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[95, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[95, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[95, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[95, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[95, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[95, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[95, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[95, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[95, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[95, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[95, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[95, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[95, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[96, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[96, "module-graphnet.utilities.maths"]]}})